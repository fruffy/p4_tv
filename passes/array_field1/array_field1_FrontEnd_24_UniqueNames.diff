--- before_pass
+++ after_pass
@@ -5,41 +5,41 @@ extern bit<1> f(inout bit<1> x, in bit<1
 control c(out H[2] h);
 package top(c _c);
 control my(out H[2] s) {
-    bit<32> a;
-    bit<32> tmp_8;
-    bit<32> tmp_9;
-    bit<32> tmp_10;
-    bit<32> tmp_11;
-    bit<1> tmp_12;
-    bit<1> tmp_13;
-    bit<32> tmp_14;
-    bit<1> tmp_15;
-    bit<1> tmp_16;
-    action act() {
-        a = 32w0;
-        tmp_8 = a;
-        s[tmp_8].z = 1w1;
-        tmp_9 = a + 32w1;
-        tmp_10 = tmp_9;
-        s[tmp_10].z = 1w0;
-        tmp_11 = a;
-        tmp_12 = s[tmp_11].z;
-        tmp_13 = f(tmp_12, 1w0);
-        s[tmp_11].z = tmp_12;
-        a = (bit<32>)tmp_13;
-        tmp_14 = a;
-        tmp_15 = s[tmp_14].z;
-        tmp_16 = f(tmp_15, 1w1);
-        s[tmp_14].z = tmp_15;
+    bit<32> a_0;
+    bit<32> tmp;
+    bit<32> tmp_0;
+    bit<32> tmp_1;
+    bit<32> tmp_2;
+    bit<1> tmp_3;
+    bit<1> tmp_4;
+    bit<32> tmp_5;
+    bit<1> tmp_6;
+    bit<1> tmp_7;
+    @name("act") action act_0() {
+        a_0 = 32w0;
+        tmp = a_0;
+        s[tmp].z = 1w1;
+        tmp_0 = a_0 + 32w1;
+        tmp_1 = tmp_0;
+        s[tmp_1].z = 1w0;
+        tmp_2 = a_0;
+        tmp_3 = s[tmp_2].z;
+        tmp_4 = f(tmp_3, 1w0);
+        s[tmp_2].z = tmp_3;
+        a_0 = (bit<32>)tmp_4;
+        tmp_5 = a_0;
+        tmp_6 = s[tmp_5].z;
+        tmp_7 = f(tmp_6, 1w1);
+        s[tmp_5].z = tmp_6;
     }
-    table tbl_act {
+    @name("tbl_act") table tbl_act_0 {
         actions = {
-            act();
+            act_0();
         }
-        const default_action = act();
+        const default_action = act_0();
     }
     apply {
-        tbl_act.apply();
+        tbl_act_0.apply();
     }
 }
 top(my()) main;
