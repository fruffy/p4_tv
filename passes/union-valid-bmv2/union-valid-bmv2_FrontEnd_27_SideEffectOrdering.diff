--- before_pass
+++ after_pass
@@ -18,14 +18,18 @@ struct Meta {
 }
 parser p(packet_in b, out Headers h, inout Meta m, inout standard_metadata_t sm) {
     state start {
-        b.extract<Hdr1>(h.h1);
+        {
+            b.extract<Hdr1>(h.h1);
+        }
         transition select(h.h1.a) {
             32w0: getH1;
             default: getH1;
         }
     }
     state getH1 {
-        b.extract<Hdr1>(h.u.h1);
+        {
+            b.extract<Hdr1>(h.u.h1);
+        }
         transition accept;
     }
 }
@@ -43,8 +47,12 @@ control egress(inout Headers h, inout Me
 }
 control deparser(packet_out b, in Headers h) {
     apply {
-        b.emit<Hdr1>(h.h1);
-        b.emit<U>(h.u);
+        {
+            b.emit<Hdr1>(h.h1);
+        }
+        {
+            b.emit<U>(h.u);
+        }
     }
 }
 control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
@@ -60,7 +68,9 @@ control ingress(inout Headers h, inout M
         default_action = a_0();
     }
     apply {
-        t_0.apply();
+        {
+            t_0.apply();
+        }
     }
 }
 V1Switch<Headers, Meta>(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
