--- before_pass
+++ after_pass
@@ -72,14 +72,8 @@ parser PROTParser(packet_in packet, out
         packet.extract<prot_common_t>(hdr.prot_common);
         packet.extract<prot_addr_common_t>(hdr.prot_addr_common);
         meta.headerLen = hdr.prot_common.hdrLen;
-        transition parse_prot_host_addr_dst_ipv4;
-    }
-    state parse_prot_host_addr_dst_ipv4 {
         packet.extract<prot_host_addr_ipv4_t>(hdr.prot_host_addr_dst.ipv4);
         meta.addrLen = 9w32;
-        transition parse_prot_host_addr_src_select;
-    }
-    state parse_prot_host_addr_src_select {
         transition select(hdr.prot_common.srcType) {
             6w0x1: parse_prot_host_addr_src_ipv4;
         }
@@ -87,15 +81,9 @@ parser PROTParser(packet_in packet, out
     state parse_prot_host_addr_src_ipv4 {
         packet.extract<prot_host_addr_ipv4_t>(hdr.prot_host_addr_src.ipv4);
         meta.addrLen = meta.addrLen + 9w32;
-        transition parse_prot_addr_padding;
-    }
-    state parse_prot_addr_padding {
         bit<9> paddingLen = 9w64 - (meta.addrLen & 9w63) & 9w63;
         packet.extract<prot_host_addr_padding_t>(hdr.prot_host_addr_padding, (bit<32>)paddingLen);
         meta.addrLen = meta.addrLen + paddingLen;
-        transition parse_prot_inf_0;
-    }
-    state parse_prot_inf_0 {
         meta.currPos = (bit<8>)(9w3 + (meta.addrLen >> 6));
         bool currentISelected = hdr.prot_common.curri == meta.currPos;
         subParser.apply(packet, hdr.prot_inf_0, meta, currentISelected, hdr.prot_common.curri);
