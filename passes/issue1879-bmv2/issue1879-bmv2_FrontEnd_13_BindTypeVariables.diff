--- before_pass
+++ after_pass
@@ -58,7 +58,7 @@ struct headers {
 }
 parser SubParser(packet_in packet, out prot_i_t inf, inout metadata meta, in bool currentISelected, in bit<8> currI) {
     state start {
-        packet.extract(inf);
+        packet.extract<prot_i_t>(inf);
         bool currentISelected2 = currI == meta.currPos;
         meta.currenti.upDirection = meta.currenti.upDirection + (bit<1>)currentISelected2 * inf.upDirection;
         meta.hLeft = inf.segLen;
@@ -69,14 +69,14 @@ parser SubParser(packet_in packet, out p
 parser PROTParser(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     SubParser() subParser;
     state start {
-        packet.extract(hdr.preamble);
-        packet.extract(hdr.prot_common);
-        packet.extract(hdr.prot_addr_common);
+        packet.extract<preamble_t>(hdr.preamble);
+        packet.extract<prot_common_t>(hdr.prot_common);
+        packet.extract<prot_addr_common_t>(hdr.prot_addr_common);
         meta.headerLen = hdr.prot_common.hdrLen;
         transition parse_prot_host_addr_dst_ipv4;
     }
     state parse_prot_host_addr_dst_ipv4 {
-        packet.extract(hdr.prot_host_addr_dst.ipv4);
+        packet.extract<prot_host_addr_ipv4_t>(hdr.prot_host_addr_dst.ipv4);
         meta.addrLen = (bit<9>)9w32;
         transition parse_prot_host_addr_src_select;
     }
@@ -86,13 +86,13 @@ parser PROTParser(packet_in packet, out
         }
     }
     state parse_prot_host_addr_src_ipv4 {
-        packet.extract(hdr.prot_host_addr_src.ipv4);
+        packet.extract<prot_host_addr_ipv4_t>(hdr.prot_host_addr_src.ipv4);
         meta.addrLen = meta.addrLen + 9w32;
         transition parse_prot_addr_padding;
     }
     state parse_prot_addr_padding {
         bit<9> paddingLen = (9w64 - meta.addrLen % 9w64) % 9w64;
-        packet.extract(hdr.prot_host_addr_padding, (bit<32>)paddingLen);
+        packet.extract<prot_host_addr_padding_t>(hdr.prot_host_addr_padding, (bit<32>)paddingLen);
         meta.addrLen = meta.addrLen + paddingLen;
         transition parse_prot_inf_0;
     }
@@ -109,7 +109,7 @@ parser PROTParser(packet_in packet, out
         }
     }
     state parse_prot_h_0 {
-        packet.extract(hdr.prot_h_0.next);
+        packet.extract<prot_h_t>(hdr.prot_h_0.next);
         meta.hLeft = meta.hLeft - 8w1;
         meta.currPos = meta.currPos + 8w1;
         transition parse_prot_h_0_pre;
@@ -148,7 +148,7 @@ control PROTComputeChecksum(inout header
 }
 control PROTDeparser(packet_out packet, in headers hdr) {
     apply {
-        packet.emit(hdr);
+        packet.emit<headers>(hdr);
     }
 }
-V1Switch(PROTParser(), PROTVerifyChecksum(), PROTIngress(), PROTEgress(), PROTComputeChecksum(), PROTDeparser()) main;
+V1Switch<headers, metadata>(PROTParser(), PROTVerifyChecksum(), PROTIngress(), PROTEgress(), PROTComputeChecksum(), PROTDeparser()) main;
