--- before_pass
+++ after_pass
@@ -21,9 +21,7 @@ struct metadata {
 }
 parser ParserImpl(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     state start {
-        {
-            packet.extract<S>(hdr.base);
-        }
+        packet.extract<S>(hdr.base);
         transition select(hdr.base.t) {
             8w0: parseO1;
             8w1: parseO2;
@@ -31,15 +29,11 @@ parser ParserImpl(packet_in packet, out
         }
     }
     state parseO1 {
-        {
-            packet.extract<O1>(hdr.u[0].byte);
-        }
+        packet.extract<O1>(hdr.u[0].byte);
         transition accept;
     }
     state parseO2 {
-        {
-            packet.extract<O2>(hdr.u[0].short);
-        }
+        packet.extract<O2>(hdr.u[0].short);
         transition accept;
     }
 }
@@ -56,23 +50,13 @@ control ingress(inout headers hdr, inout
         const default_action = NoAction();
     }
     apply {
-        {
-            debug_hdr_0.apply();
-        }
+        debug_hdr_0.apply();
         if (hdr.u[0].short.isValid()) {
-            {
-                hdr.u[0].short.data = 16w0xffff;
-            }
-            {
-                hdr.u[0].short.setInvalid();
-            }
+            hdr.u[0].short.data = 16w0xffff;
+            hdr.u[0].short.setInvalid();
         } else if (hdr.u[0].byte.isValid()) {
-            {
-                hdr.u[0].byte.data = 8w0xff;
-            }
-            {
-                hdr.u[0].byte.setInvalid();
-            }
+            hdr.u[0].byte.data = 8w0xff;
+            hdr.u[0].byte.setInvalid();
         }
     }
 }
@@ -82,9 +66,7 @@ control egress(inout headers hdr, inout
 }
 control DeparserImpl(packet_out packet, in headers hdr) {
     apply {
-        {
-            packet.emit<headers>(hdr);
-        }
+        packet.emit<headers>(hdr);
     }
 }
 control verifyChecksum(inout headers hdr, inout metadata meta) {
