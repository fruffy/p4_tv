--- before_pass
+++ after_pass
@@ -73,46 +73,46 @@ control MyVerifyChecksum(inout headers h
     }
 }
 control MyIngress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name(".NoAction") action NoAction_2() {
+    @name(".NoAction") action NoAction_0() {
     }
-    @name(".NoAction") action NoAction_3() {
+    @name(".NoAction") action NoAction_1() {
     }
-    @name("set_dmac") action set_dmac_0(macAddr_t dstAddr) {
+    @name("set_dmac") action set_dmac(macAddr_t dstAddr) {
         hdr.ethernet.dstAddr = dstAddr;
     }
-    @name("drop") action drop_0() {
+    @name("drop") action drop() {
     }
-    @name("drop") action drop_1() {
+    @name("drop") action drop_2() {
     }
-    @name("forward") table forward {
+    @name("forward") table forward_0 {
         key = {
             hdr.ipv4.dstAddr: exact @name("hdr.ipv4.dstAddr") ;
         }
         actions = {
-            set_dmac_0();
-            drop_0();
-            NoAction_2();
+            set_dmac();
+            drop();
+            NoAction_0();
         }
         size = 1024;
-        default_action = NoAction_2();
+        default_action = NoAction_0();
     }
-    @name("set_nhop") action set_nhop_0(ip4Addr_t dstAddr, egressSpec_t port) {
+    @name("set_nhop") action set_nhop(ip4Addr_t dstAddr, egressSpec_t port) {
         hdr.ipv4.dstAddr = dstAddr;
         standard_metadata.egress_spec = port;
     }
-    @name("ipv4_lpm") table ipv4_lpm {
+    @name("ipv4_lpm") table ipv4_lpm_0 {
         key = {
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
         actions = {
-            set_nhop_0();
-            drop_1();
-            NoAction_3();
+            set_nhop();
+            drop_2();
+            NoAction_1();
         }
         size = 1024;
-        default_action = NoAction_3();
+        default_action = NoAction_1();
     }
-    @name("send_digest") action send_digest_0() {
+    @name("send_digest") action send_digest() {
         meta.test_digest.in_mac_srcAddr = hdr.ethernet.srcAddr;
         meta.test_digest.my_parser_error = error.PacketTooShort;
         meta.test_digest.pkt_type = MyPacketTypes.IPv4;
@@ -124,31 +124,31 @@ control MyIngress(inout headers hdr, ino
         digest<test_digest3_t>(32w3, meta.test_digest3);
     }
     apply {
-        ipv4_lpm.apply();
-        forward.apply();
-        send_digest_0();
+        ipv4_lpm_0.apply();
+        forward_0.apply();
+        send_digest();
     }
 }
 control MyEgress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name(".NoAction") action NoAction_4() {
+    @name(".NoAction") action NoAction_5() {
     }
-    @name("rewrite_mac") action rewrite_mac_0(macAddr_t srcAddr) {
+    @name("rewrite_mac") action rewrite_mac(macAddr_t srcAddr) {
         hdr.ethernet.srcAddr = srcAddr;
         hdr.ipv4.ttl = hdr.ipv4.ttl + 8w255;
     }
-    @name("send_frame") table send_frame {
+    @name("send_frame") table send_frame_0 {
         key = {
             standard_metadata.egress_port: exact @name("standard_metadata.egress_port") ;
         }
         actions = {
-            rewrite_mac_0();
-            NoAction_4();
+            rewrite_mac();
+            NoAction_5();
         }
         size = 1024;
-        default_action = NoAction_4();
+        default_action = NoAction_5();
     }
     apply {
-        send_frame.apply();
+        send_frame_0.apply();
     }
 }
 control MyComputeChecksum(inout headers hdr, inout metadata meta) {
