--- before_pass
+++ after_pass
@@ -11,40 +11,40 @@ parser ParserI(packet_in pk, out H hdr,
     }
 }
 control IngressI(inout H hdr, inout M meta, inout standard_metadata_t smeta) {
-    @name(".NoAction") action NoAction_1() {
+    @name(".NoAction") action NoAction_0() {
     }
-    @name(".NoAction") action NoAction_2() {
+    @name(".NoAction") action NoAction_3() {
     }
-    @name("drop") action drop_0() {
+    @name("drop") action drop() {
         mark_to_drop(smeta);
     }
-    @name("drop") action drop_1() {
+    @name("drop") action drop_2() {
         mark_to_drop(smeta);
     }
-    @name("indirect") table indirect {
+    @name("indirect") table indirect_0 {
         key = {
         }
         actions = {
-            drop_0();
-            NoAction_1();
+            drop();
+            NoAction_0();
         }
-        const default_action = NoAction_1();
+        const default_action = NoAction_0();
         @name("ap") implementation = action_profile(32w128);
     }
-    @name("indirect_ws") table indirect_ws {
+    @name("indirect_ws") table indirect_ws_0 {
         key = {
             meta.hash1: selector @name("meta.hash1") ;
         }
         actions = {
-            drop_1();
-            NoAction_2();
+            drop_2();
+            NoAction_3();
         }
-        const default_action = NoAction_2();
+        const default_action = NoAction_3();
         @name("ap_ws") implementation = action_selector(HashAlgorithm.identity, 32w1024, 32w10);
     }
     apply {
-        indirect.apply();
-        indirect_ws.apply();
+        indirect_0.apply();
+        indirect_ws_0.apply();
     }
 }
 control EgressI(inout H hdr, inout M meta, inout standard_metadata_t smeta) {
