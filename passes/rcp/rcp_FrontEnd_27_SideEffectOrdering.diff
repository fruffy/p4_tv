--- before_pass
+++ after_pass
@@ -21,16 +21,34 @@ control ingress(inout H pkt_hdr, in Meta
     @name("num_pkts_with_rtt") Register<bit<32>>(32w1) num_pkts_with_rtt_0;
     apply {
         @atomic {
-            input_traffic_bytes_0.read(32w0, input_traffic_bytes_tmp_0);
-            input_traffic_bytes_tmp_0 = input_traffic_bytes_tmp_0 + metadata.pkt_len;
-            input_traffic_bytes_0.write(input_traffic_bytes_tmp_0, 32w0);
+            {
+                input_traffic_bytes_0.read(32w0, input_traffic_bytes_tmp_0);
+            }
+            {
+                input_traffic_bytes_tmp_0 = input_traffic_bytes_tmp_0 + metadata.pkt_len;
+            }
+            {
+                input_traffic_bytes_0.write(input_traffic_bytes_tmp_0, 32w0);
+            }
             if (pkt_hdr.rtt < 32w2500) {
-                sum_rtt_Tr_0.read(32w0, sum_rtt_Tr_tmp_0);
-                sum_rtt_Tr_tmp_0 = sum_rtt_Tr_tmp_0 + pkt_hdr.rtt;
-                sum_rtt_Tr_0.write(sum_rtt_Tr_tmp_0, 32w0);
-                num_pkts_with_rtt_0.read(32w0, num_pkts_with_rtt_tmp_0);
-                num_pkts_with_rtt_tmp_0 = num_pkts_with_rtt_tmp_0 + 32w1;
-                num_pkts_with_rtt_0.write(num_pkts_with_rtt_tmp_0, 32w0);
+                {
+                    sum_rtt_Tr_0.read(32w0, sum_rtt_Tr_tmp_0);
+                }
+                {
+                    sum_rtt_Tr_tmp_0 = sum_rtt_Tr_tmp_0 + pkt_hdr.rtt;
+                }
+                {
+                    sum_rtt_Tr_0.write(sum_rtt_Tr_tmp_0, 32w0);
+                }
+                {
+                    num_pkts_with_rtt_0.read(32w0, num_pkts_with_rtt_tmp_0);
+                }
+                {
+                    num_pkts_with_rtt_tmp_0 = num_pkts_with_rtt_tmp_0 + 32w1;
+                }
+                {
+                    num_pkts_with_rtt_0.write(num_pkts_with_rtt_tmp_0, 32w0);
+                }
             }
         }
     }
