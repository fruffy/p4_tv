--- before_pass
+++ after_pass
@@ -13,21 +13,21 @@ struct Metadata {
     bit<32> pkt_len;
 }
 control ingress(inout H pkt_hdr, in Metadata metadata) {
+    bit<32> input_traffic_bytes_tmp_0;
+    bit<32> sum_rtt_Tr_tmp_0;
+    bit<32> num_pkts_with_rtt_tmp_0;
     @name("input_traffic_bytes") Register<bit<32>>(32w1) input_traffic_bytes_0;
     @name("sum_rtt_Tr") Register<bit<32>>(32w1) sum_rtt_Tr_0;
     @name("num_pkts_with_rtt") Register<bit<32>>(32w1) num_pkts_with_rtt_0;
     apply {
         @atomic {
-            bit<32> input_traffic_bytes_tmp_0;
             input_traffic_bytes_0.read(32w0, input_traffic_bytes_tmp_0);
             input_traffic_bytes_tmp_0 = input_traffic_bytes_tmp_0 + metadata.pkt_len;
             input_traffic_bytes_0.write(input_traffic_bytes_tmp_0, 32w0);
             if (pkt_hdr.rtt < 32w2500) {
-                bit<32> sum_rtt_Tr_tmp_0;
                 sum_rtt_Tr_0.read(32w0, sum_rtt_Tr_tmp_0);
                 sum_rtt_Tr_tmp_0 = sum_rtt_Tr_tmp_0 + pkt_hdr.rtt;
                 sum_rtt_Tr_0.write(sum_rtt_Tr_tmp_0, 32w0);
-                bit<32> num_pkts_with_rtt_tmp_0;
                 num_pkts_with_rtt_0.read(32w0, num_pkts_with_rtt_tmp_0);
                 num_pkts_with_rtt_tmp_0 = num_pkts_with_rtt_tmp_0 + 32w1;
                 num_pkts_with_rtt_0.write(num_pkts_with_rtt_tmp_0, 32w0);
