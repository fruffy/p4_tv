--- before_pass
+++ after_pass
@@ -49,74 +49,85 @@ parser ParserImpl(packet_in packet, out
     }
 }
 control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name(".rewrite_mac") action rewrite_mac(bit<48> smac) {
+    @name(".NoAction") action NoAction_2() {
+    }
+    @name(".rewrite_mac") action rewrite_mac_0(bit<48> smac) {
         hdr.ethernet.srcAddr = smac;
     }
-    @name("._drop") action _drop() {
+    @name("._drop") action _drop_0() {
         mark_to_drop(standard_metadata);
     }
     @name("send_frame") table send_frame {
         actions = {
-            rewrite_mac();
-            _drop();
-            @defaultonly NoAction();
+            rewrite_mac_0();
+            _drop_0();
+            @defaultonly NoAction_2();
         }
         key = {
             standard_metadata.egress_port: exact @name("standard_metadata.egress_port") ;
         }
         size = 256;
-        default_action = NoAction();
+        default_action = NoAction_2();
     }
     apply {
         send_frame.apply();
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name(".bcast") action bcast() {
+    @name(".NoAction") action NoAction_3() {
+    }
+    @name(".NoAction") action NoAction_4() {
+    }
+    @name(".NoAction") action NoAction_5() {
+    }
+    @name(".bcast") action bcast_0() {
         standard_metadata.mcast_grp = 16w1;
     }
-    @name(".set_dmac") action set_dmac(bit<48> dmac) {
+    @name(".set_dmac") action set_dmac_0(bit<48> dmac) {
         hdr.ethernet.dstAddr = dmac;
     }
-    @name("._drop") action _drop_2() {
+    @name("._drop") action _drop_1() {
+        mark_to_drop(standard_metadata);
+    }
+    @name("._drop") action _drop_3() {
         mark_to_drop(standard_metadata);
     }
-    @name(".set_nhop") action set_nhop(bit<32> nhop_ipv4, bit<9> port) {
+    @name(".set_nhop") action set_nhop_0(bit<32> nhop_ipv4, bit<9> port) {
         meta.routing_metadata.nhop_ipv4 = nhop_ipv4;
         standard_metadata.egress_spec = port;
         hdr.ipv4.ttl = hdr.ipv4.ttl + 8w255;
     }
     @name("broadcast") table broadcast {
         actions = {
-            bcast();
-            @defaultonly NoAction();
+            bcast_0();
+            @defaultonly NoAction_3();
         }
         size = 1;
-        default_action = NoAction();
+        default_action = NoAction_3();
     }
     @name("forward") table forward {
         actions = {
-            set_dmac();
-            _drop_2();
-            @defaultonly NoAction();
+            set_dmac_0();
+            _drop_1();
+            @defaultonly NoAction_4();
         }
         key = {
             meta.routing_metadata.nhop_ipv4: exact @name("meta.routing_metadata.nhop_ipv4") ;
         }
         size = 512;
-        default_action = NoAction();
+        default_action = NoAction_4();
     }
     @name("ipv4_lpm") table ipv4_lpm {
         actions = {
-            set_nhop();
-            _drop_2();
-            @defaultonly NoAction();
+            set_nhop_0();
+            _drop_3();
+            @defaultonly NoAction_5();
         }
         key = {
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
         size = 1024;
-        default_action = NoAction();
+        default_action = NoAction_5();
     }
     apply {
         if (hdr.ipv4.isValid()) {
