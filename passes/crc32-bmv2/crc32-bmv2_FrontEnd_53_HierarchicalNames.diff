--- before_pass
+++ after_pass
@@ -55,42 +55,42 @@ control MyIngress(inout headers hdr, ino
     bit<64> ncount_0;
     bit<32> nselect_0;
     bit<32> ninput_0;
-    @name("operation_add") action operation_add() {
+    @name("MyIngress.operation_add") action operation_add() {
         hdr.p4calc.res = hdr.p4calc.operand_a + hdr.p4calc.operand_b;
         tmp_2 = hdr.ethernet.dstAddr;
         hdr.ethernet.dstAddr = hdr.ethernet.srcAddr;
         hdr.ethernet.srcAddr = tmp_2;
         standard_metadata.egress_spec = standard_metadata.ingress_port;
     }
-    @name("operation_sub") action operation_sub() {
+    @name("MyIngress.operation_sub") action operation_sub() {
         hdr.p4calc.res = hdr.p4calc.operand_a - hdr.p4calc.operand_b;
         tmp_2 = hdr.ethernet.dstAddr;
         hdr.ethernet.dstAddr = hdr.ethernet.srcAddr;
         hdr.ethernet.srcAddr = tmp_2;
         standard_metadata.egress_spec = standard_metadata.ingress_port;
     }
-    @name("operation_and") action operation_and() {
+    @name("MyIngress.operation_and") action operation_and() {
         hdr.p4calc.res = hdr.p4calc.operand_a & hdr.p4calc.operand_b;
         tmp_2 = hdr.ethernet.dstAddr;
         hdr.ethernet.dstAddr = hdr.ethernet.srcAddr;
         hdr.ethernet.srcAddr = tmp_2;
         standard_metadata.egress_spec = standard_metadata.ingress_port;
     }
-    @name("operation_or") action operation_or() {
+    @name("MyIngress.operation_or") action operation_or() {
         hdr.p4calc.res = hdr.p4calc.operand_a | hdr.p4calc.operand_b;
         tmp_2 = hdr.ethernet.dstAddr;
         hdr.ethernet.dstAddr = hdr.ethernet.srcAddr;
         hdr.ethernet.srcAddr = tmp_2;
         standard_metadata.egress_spec = standard_metadata.ingress_port;
     }
-    @name("operation_xor") action operation_xor() {
+    @name("MyIngress.operation_xor") action operation_xor() {
         hdr.p4calc.res = hdr.p4calc.operand_a ^ hdr.p4calc.operand_b;
         tmp_2 = hdr.ethernet.dstAddr;
         hdr.ethernet.dstAddr = hdr.ethernet.srcAddr;
         hdr.ethernet.srcAddr = tmp_2;
         standard_metadata.egress_spec = standard_metadata.ingress_port;
     }
-    @name("operation_crc") action operation_crc() {
+    @name("MyIngress.operation_crc") action operation_crc() {
         nbase_0 = hdr.p4calc.operand_b;
         ncount_0 = 64w8589934592;
         ninput_0 = hdr.p4calc.operand_a;
@@ -101,13 +101,13 @@ control MyIngress(inout headers hdr, ino
         hdr.ethernet.srcAddr = tmp_2;
         standard_metadata.egress_spec = standard_metadata.ingress_port;
     }
-    @name("operation_drop") action operation_drop() {
+    @name("MyIngress.operation_drop") action operation_drop() {
         mark_to_drop(standard_metadata);
     }
-    @name("operation_drop") action operation_drop_2() {
+    @name("MyIngress.operation_drop") action operation_drop_2() {
         mark_to_drop(standard_metadata);
     }
-    @name("calculate") table calculate_0 {
+    @name("MyIngress.calculate") table calculate_0 {
         key = {
             hdr.p4calc.op: exact @name("hdr.p4calc.op") ;
         }
