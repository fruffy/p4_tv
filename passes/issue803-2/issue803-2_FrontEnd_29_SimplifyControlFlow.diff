--- before_pass
+++ after_pass
@@ -40,55 +40,37 @@ struct ing_to_egr {
 }
 parser ing_parse(packet_in buffer, out ing_in_headers parsed_hdr) {
     state start {
-        {
-            buffer.extract<ethernet_t>(parsed_hdr.ethernet);
-        }
+        buffer.extract<ethernet_t>(parsed_hdr.ethernet);
         transition accept;
     }
 }
 control ingress(in ing_in_headers ihdr, in InControl inCtrl, out ing_out_headers ohdr, out ing_to_egr toEgress, out OutControl outCtrl) {
     apply {
-        {
-            ohdr.ethernet = ihdr.ethernet;
-        }
-        {
-            toEgress.x = inCtrl.inputPort;
-        }
-        {
-            outCtrl.outputPort = inCtrl.inputPort;
-        }
+        ohdr.ethernet = ihdr.ethernet;
+        toEgress.x = inCtrl.inputPort;
+        outCtrl.outputPort = inCtrl.inputPort;
     }
 }
 control ing_deparse(in ing_out_headers ohdr, packet_out b) {
     apply {
-        {
-            b.emit<ethernet_t>(ohdr.ethernet);
-        }
+        b.emit<ethernet_t>(ohdr.ethernet);
     }
 }
 parser egr_parse(packet_in buffer, out egr_in_headers parsed_hdr) {
     state start {
-        {
-            buffer.extract<ethernet_t>(parsed_hdr.ethernet);
-        }
+        buffer.extract<ethernet_t>(parsed_hdr.ethernet);
         transition accept;
     }
 }
 control egress(in egr_in_headers ihdr, in InControl inCtrl, in ing_to_egr fromIngress, out egr_out_headers ohdr, out OutControl outCtrl) {
     apply {
-        {
-            ohdr.ethernet = ihdr.ethernet;
-        }
-        {
-            outCtrl.outputPort = fromIngress.x;
-        }
+        ohdr.ethernet = ihdr.ethernet;
+        outCtrl.outputPort = fromIngress.x;
     }
 }
 control egr_deparse(in egr_out_headers ohdr, packet_out b) {
     apply {
-        {
-            b.emit<ethernet_t>(ohdr.ethernet);
-        }
+        b.emit<ethernet_t>(ohdr.ethernet);
     }
 }
 Ingress<ing_to_egr, ing_in_headers, ing_out_headers>(ing_parse(), ingress(), ing_deparse()) ig1;
