--- before_pass
+++ after_pass
@@ -33,29 +33,21 @@ struct metadata {
 }
 parser parserI(packet_in pkt, out headers hdr, inout metadata meta, inout standard_metadata_t stdmeta) {
     state start {
-        {
-            pkt.extract<ethernet_t>(hdr.ethernet);
-        }
+        pkt.extract<ethernet_t>(hdr.ethernet);
         transition select(hdr.ethernet.etherType) {
             16w0x800: parse_ipv4;
             default: accept;
         }
     }
     state parse_ipv4 {
-        {
-            pkt.extract<ipv4_t>(hdr.ipv4);
-        }
+        pkt.extract<ipv4_t>(hdr.ipv4);
         transition accept;
     }
 }
 control cIngress(inout headers hdr, inout metadata meta, inout standard_metadata_t stdmeta) {
     @name("hash_drop_decision") action hash_drop_decision_0() {
-        {
-            hash<bit<16>, bit<16>, tuple<bit<32>, bit<32>, bit<8>>, bit<32>>(meta.mystruct1.hash1, HashAlgorithm.crc16, 16w0, { hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.ipv4.protocol }, 32w0xffff);
-        }
-        {
-            meta.mystruct1.hash_drop = meta.mystruct1.hash1 < 16w0x8000;
-        }
+        hash<bit<16>, bit<16>, tuple<bit<32>, bit<32>, bit<8>>, bit<32>>(meta.mystruct1.hash1, HashAlgorithm.crc16, 16w0, { hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.ipv4.protocol }, 32w0xffff);
+        meta.mystruct1.hash_drop = meta.mystruct1.hash1 < 16w0x8000;
     }
     @name("guh") table guh_0 {
         key = {
@@ -78,15 +70,9 @@ control cIngress(inout headers hdr, inou
     }
     apply {
         if (hdr.ipv4.isValid()) {
-            {
-                meta.mystruct1.hash_drop = false;
-            }
-            {
-                guh_0.apply();
-            }
-            {
-                debug_table_0.apply();
-            }
+            meta.mystruct1.hash_drop = false;
+            guh_0.apply();
+            debug_table_0.apply();
             if (meta.mystruct1.hash_drop) {
                 hdr.ethernet.dstAddr = meta.mystruct1.hash1 ++ 7w0 ++ (bit<1>)meta.mystruct1.hash_drop ++ 8w0 ++ 16w0xdead;
             } else {
@@ -109,12 +95,8 @@ control updateChecksum(inout headers hdr
 }
 control DeparserI(packet_out packet, in headers hdr) {
     apply {
-        {
-            packet.emit<ethernet_t>(hdr.ethernet);
-        }
-        {
-            packet.emit<ipv4_t>(hdr.ipv4);
-        }
+        packet.emit<ethernet_t>(hdr.ethernet);
+        packet.emit<ipv4_t>(hdr.ipv4);
     }
 }
 V1Switch<headers, metadata>(parserI(), verifyChecksum(), cIngress(), cEgress(), updateChecksum(), DeparserI()) main;
