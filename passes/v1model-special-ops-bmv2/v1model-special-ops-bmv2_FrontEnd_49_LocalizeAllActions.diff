--- before_pass
+++ after_pass
@@ -35,9 +35,6 @@ struct headers_t {
     ethernet_t             ethernet;
     ipv4_t                 ipv4;
 }
-action my_drop(inout standard_metadata_t smeta_0) {
-    mark_to_drop(smeta_0);
-}
 parser ParserImpl(packet_in packet, out headers_t hdr, inout meta_t meta, inout standard_metadata_t standard_metadata) {
     state start {
         packet.extract<ethernet_t>(hdr.ethernet);
@@ -52,22 +49,28 @@ parser ParserImpl(packet_in packet, out
     }
 }
 control ingress(inout headers_t hdr, inout meta_t meta, inout standard_metadata_t standard_metadata) {
+    @name(".my_drop") action my_drop_2(inout standard_metadata_t smeta_0) {
+        mark_to_drop(smeta_0);
+    }
+    @name(".my_drop") action my_drop_3(inout standard_metadata_t smeta_0) {
+        mark_to_drop(smeta_0);
+    }
     bit<32> ipv4_address;
     bit<8> byte0;
     bit<8> byte1;
     bit<8> byte2;
     bit<8> byte3;
-    @name("set_l2ptr") action set_l2ptr(bit<32> l2ptr) {
+    @name("set_l2ptr") action set_l2ptr_0(bit<32> l2ptr) {
         meta.fwd.l2ptr = l2ptr;
     }
-    @name("set_mcast_grp") action set_mcast_grp(bit<16> mcast_grp) {
+    @name("set_mcast_grp") action set_mcast_grp_0(bit<16> mcast_grp) {
         standard_metadata.mcast_grp = mcast_grp;
     }
-    @name("do_resubmit") action do_resubmit(bit<32> new_ipv4_dstAddr) {
+    @name("do_resubmit") action do_resubmit_0(bit<32> new_ipv4_dstAddr) {
         hdr.ipv4.dstAddr = new_ipv4_dstAddr;
         resubmit<tuple<>>({  });
     }
-    @name("do_clone_i2e") action do_clone_i2e(bit<32> l2ptr) {
+    @name("do_clone_i2e") action do_clone_i2e_0(bit<32> l2ptr) {
         clone3<tuple<>>(CloneType.I2E, 32w5, {  });
         meta.fwd.l2ptr = l2ptr;
     }
@@ -76,15 +79,15 @@ control ingress(inout headers_t hdr, ino
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
         actions = {
-            set_l2ptr();
-            set_mcast_grp();
-            do_resubmit();
-            do_clone_i2e();
-            my_drop(standard_metadata);
+            set_l2ptr_0();
+            set_mcast_grp_0();
+            do_resubmit_0();
+            do_clone_i2e_0();
+            my_drop_2(standard_metadata);
         }
-        default_action = my_drop(standard_metadata);
+        default_action = my_drop_2(standard_metadata);
     }
-    @name("set_bd_dmac_intf") action set_bd_dmac_intf(bit<24> bd, bit<48> dmac, bit<9> intf) {
+    @name("set_bd_dmac_intf") action set_bd_dmac_intf_0(bit<24> bd, bit<48> dmac, bit<9> intf) {
         meta.fwd.out_bd = bd;
         hdr.ethernet.dstAddr = dmac;
         standard_metadata.egress_spec = intf;
@@ -95,10 +98,10 @@ control ingress(inout headers_t hdr, ino
             meta.fwd.l2ptr: exact @name("meta.fwd.l2ptr") ;
         }
         actions = {
-            set_bd_dmac_intf();
-            my_drop(standard_metadata);
+            set_bd_dmac_intf_0();
+            my_drop_3(standard_metadata);
         }
-        default_action = my_drop(standard_metadata);
+        default_action = my_drop_3(standard_metadata);
     }
     apply {
         if (standard_metadata.instance_type == 32w6) {
@@ -126,7 +129,12 @@ control ingress(inout headers_t hdr, ino
     }
 }
 control egress(inout headers_t hdr, inout meta_t meta, inout standard_metadata_t standard_metadata) {
-    @name("set_out_bd") action set_out_bd(bit<24> bd) {
+    @name(".NoAction") action NoAction_1() {
+    }
+    @name(".my_drop") action my_drop_4(inout standard_metadata_t smeta_0) {
+        mark_to_drop(smeta_0);
+    }
+    @name("set_out_bd") action set_out_bd_0(bit<24> bd) {
         meta.fwd.out_bd = bd;
     }
     @name("get_multicast_copy_out_bd") table get_multicast_copy_out_bd {
@@ -135,19 +143,19 @@ control egress(inout headers_t hdr, inou
             standard_metadata.egress_rid: exact @name("standard_metadata.egress_rid") ;
         }
         actions = {
-            set_out_bd();
-            @defaultonly NoAction();
+            set_out_bd_0();
+            @defaultonly NoAction_1();
         }
-        default_action = NoAction();
+        default_action = NoAction_1();
     }
-    @name("rewrite_mac") action rewrite_mac(bit<48> smac) {
+    @name("rewrite_mac") action rewrite_mac_0(bit<48> smac) {
         hdr.ethernet.srcAddr = smac;
     }
-    @name("do_recirculate") action do_recirculate(bit<32> new_ipv4_dstAddr) {
+    @name("do_recirculate") action do_recirculate_0(bit<32> new_ipv4_dstAddr) {
         hdr.ipv4.dstAddr = new_ipv4_dstAddr;
         recirculate<tuple<>>({  });
     }
-    @name("do_clone_e2e") action do_clone_e2e(bit<48> smac) {
+    @name("do_clone_e2e") action do_clone_e2e_0(bit<48> smac) {
         hdr.ethernet.srcAddr = smac;
         clone3<tuple<>>(CloneType.E2E, 32w11, {  });
     }
@@ -156,12 +164,12 @@ control egress(inout headers_t hdr, inou
             meta.fwd.out_bd: exact @name("meta.fwd.out_bd") ;
         }
         actions = {
-            rewrite_mac();
-            do_recirculate();
-            do_clone_e2e();
-            my_drop(standard_metadata);
+            rewrite_mac_0();
+            do_recirculate_0();
+            do_clone_e2e_0();
+            my_drop_4(standard_metadata);
         }
-        default_action = my_drop(standard_metadata);
+        default_action = my_drop_4(standard_metadata);
     }
     apply {
         if (standard_metadata.instance_type == 32w1) {
