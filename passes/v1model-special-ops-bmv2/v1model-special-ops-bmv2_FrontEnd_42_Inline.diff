--- before_pass
+++ after_pass
@@ -51,13 +51,12 @@ parser ParserImpl(packet_in packet, out
         transition accept;
     }
 }
-control fill_ipv4_address(out bit<32> ipv4_address, in bit<8> byte0, in bit<8> byte1, in bit<8> byte2, in bit<8> byte3) {
-    apply {
-        ipv4_address = byte0 ++ byte1 ++ byte2 ++ byte3;
-    }
-}
 control ingress(inout headers_t hdr, inout meta_t meta, inout standard_metadata_t standard_metadata) {
-    @name("c_fill_ipv4_address") fill_ipv4_address() c_fill_ipv4_address_0;
+    bit<32> ipv4_address_0;
+    bit<8> byte0_0;
+    bit<8> byte1_0;
+    bit<8> byte2_0;
+    bit<8> byte3_0;
     @name("set_l2ptr") action set_l2ptr_0(bit<32> l2ptr) {
         meta.fwd.l2ptr = l2ptr;
     }
@@ -103,10 +102,24 @@ control ingress(inout headers_t hdr, ino
     }
     apply {
         if (standard_metadata.instance_type == 32w6) {
-            c_fill_ipv4_address_0.apply(hdr.ipv4.srcAddr, 8w10, 8w252, 8w129, 8w2);
+            {
+                byte0_0 = 8w10;
+                byte1_0 = 8w252;
+                byte2_0 = 8w129;
+                byte3_0 = 8w2;
+                ipv4_address_0 = byte0_0 ++ byte1_0 ++ byte2_0 ++ byte3_0;
+                hdr.ipv4.srcAddr = ipv4_address_0;
+            }
             meta.fwd.l2ptr = 32w0xe50b;
         } else if (standard_metadata.instance_type == 32w4) {
-            c_fill_ipv4_address_0.apply(hdr.ipv4.srcAddr, 8w10, 8w199, 8w86, 8w99);
+            {
+                byte0_0 = 8w10;
+                byte1_0 = 8w199;
+                byte2_0 = 8w86;
+                byte3_0 = 8w99;
+                ipv4_address_0 = byte0_0 ++ byte1_0 ++ byte2_0 ++ byte3_0;
+                hdr.ipv4.srcAddr = ipv4_address_0;
+            }
             meta.fwd.l2ptr = 32w0xec1c;
         } else {
             ipv4_da_lpm_0.apply();
