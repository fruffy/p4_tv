--- before_pass
+++ after_pass
@@ -60,21 +60,21 @@ control ingress(inout headers_t hdr, ino
     bit<8> byte1_0;
     bit<8> byte2_0;
     bit<8> byte3_0;
-    @name("set_l2ptr") action set_l2ptr(bit<32> l2ptr) {
+    @name("ingress.set_l2ptr") action set_l2ptr(bit<32> l2ptr) {
         meta.fwd.l2ptr = l2ptr;
     }
-    @name("set_mcast_grp") action set_mcast_grp(bit<16> mcast_grp) {
+    @name("ingress.set_mcast_grp") action set_mcast_grp(bit<16> mcast_grp) {
         standard_metadata.mcast_grp = mcast_grp;
     }
-    @name("do_resubmit") action do_resubmit(bit<32> new_ipv4_dstAddr) {
+    @name("ingress.do_resubmit") action do_resubmit(bit<32> new_ipv4_dstAddr) {
         hdr.ipv4.dstAddr = new_ipv4_dstAddr;
         resubmit<tuple<>>({  });
     }
-    @name("do_clone_i2e") action do_clone_i2e(bit<32> l2ptr) {
+    @name("ingress.do_clone_i2e") action do_clone_i2e(bit<32> l2ptr) {
         clone3<tuple<>>(CloneType.I2E, 32w5, {  });
         meta.fwd.l2ptr = l2ptr;
     }
-    @name("ipv4_da_lpm") table ipv4_da_lpm_0 {
+    @name("ingress.ipv4_da_lpm") table ipv4_da_lpm_0 {
         key = {
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
@@ -87,13 +87,13 @@ control ingress(inout headers_t hdr, ino
         }
         default_action = my_drop(standard_metadata);
     }
-    @name("set_bd_dmac_intf") action set_bd_dmac_intf(bit<24> bd, bit<48> dmac, bit<9> intf) {
+    @name("ingress.set_bd_dmac_intf") action set_bd_dmac_intf(bit<24> bd, bit<48> dmac, bit<9> intf) {
         meta.fwd.out_bd = bd;
         hdr.ethernet.dstAddr = dmac;
         standard_metadata.egress_spec = intf;
         hdr.ipv4.ttl = hdr.ipv4.ttl + 8w255;
     }
-    @name("mac_da") table mac_da_0 {
+    @name("ingress.mac_da") table mac_da_0 {
         key = {
             meta.fwd.l2ptr: exact @name("meta.fwd.l2ptr") ;
         }
@@ -134,10 +134,10 @@ control egress(inout headers_t hdr, inou
     @name(".my_drop") action my_drop_1(inout standard_metadata_t smeta_2) {
         mark_to_drop(smeta_2);
     }
-    @name("set_out_bd") action set_out_bd(bit<24> bd) {
+    @name("egress.set_out_bd") action set_out_bd(bit<24> bd) {
         meta.fwd.out_bd = bd;
     }
-    @name("get_multicast_copy_out_bd") table get_multicast_copy_out_bd_0 {
+    @name("egress.get_multicast_copy_out_bd") table get_multicast_copy_out_bd_0 {
         key = {
             standard_metadata.mcast_grp : exact @name("standard_metadata.mcast_grp") ;
             standard_metadata.egress_rid: exact @name("standard_metadata.egress_rid") ;
@@ -148,18 +148,18 @@ control egress(inout headers_t hdr, inou
         }
         default_action = NoAction_0();
     }
-    @name("rewrite_mac") action rewrite_mac(bit<48> smac) {
+    @name("egress.rewrite_mac") action rewrite_mac(bit<48> smac) {
         hdr.ethernet.srcAddr = smac;
     }
-    @name("do_recirculate") action do_recirculate(bit<32> new_ipv4_dstAddr) {
+    @name("egress.do_recirculate") action do_recirculate(bit<32> new_ipv4_dstAddr) {
         hdr.ipv4.dstAddr = new_ipv4_dstAddr;
         recirculate<tuple<>>({  });
     }
-    @name("do_clone_e2e") action do_clone_e2e(bit<48> smac) {
+    @name("egress.do_clone_e2e") action do_clone_e2e(bit<48> smac) {
         hdr.ethernet.srcAddr = smac;
         clone3<tuple<>>(CloneType.E2E, 32w11, {  });
     }
-    @name("send_frame") table send_frame_0 {
+    @name("egress.send_frame") table send_frame_0 {
         key = {
             meta.fwd.out_bd: exact @name("meta.fwd.out_bd") ;
         }
