--- before_pass
+++ after_pass
@@ -57,99 +57,99 @@ control fill_ipv4_address(out bit<32> ip
     }
 }
 control ingress(inout headers_t hdr, inout meta_t meta, inout standard_metadata_t standard_metadata) {
-    fill_ipv4_address() c_fill_ipv4_address;
-    action set_l2ptr(bit<32> l2ptr) {
+    @name("c_fill_ipv4_address") fill_ipv4_address() c_fill_ipv4_address_0;
+    @name("set_l2ptr") action set_l2ptr_0(bit<32> l2ptr) {
         meta.fwd.l2ptr = l2ptr;
     }
-    action set_mcast_grp(bit<16> mcast_grp) {
+    @name("set_mcast_grp") action set_mcast_grp_0(bit<16> mcast_grp) {
         standard_metadata.mcast_grp = mcast_grp;
     }
-    action do_resubmit(bit<32> new_ipv4_dstAddr) {
+    @name("do_resubmit") action do_resubmit_0(bit<32> new_ipv4_dstAddr) {
         hdr.ipv4.dstAddr = new_ipv4_dstAddr;
         resubmit<tuple<>>({  });
     }
-    action do_clone_i2e(bit<32> l2ptr) {
+    @name("do_clone_i2e") action do_clone_i2e_0(bit<32> l2ptr) {
         clone3<tuple<>>(CloneType.I2E, 32w5, {  });
         meta.fwd.l2ptr = l2ptr;
     }
-    table ipv4_da_lpm {
+    @name("ipv4_da_lpm") table ipv4_da_lpm_0 {
         key = {
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
         actions = {
-            set_l2ptr();
-            set_mcast_grp();
-            do_resubmit();
-            do_clone_i2e();
+            set_l2ptr_0();
+            set_mcast_grp_0();
+            do_resubmit_0();
+            do_clone_i2e_0();
             my_drop(standard_metadata);
         }
         default_action = my_drop(standard_metadata);
     }
-    action set_bd_dmac_intf(bit<24> bd, bit<48> dmac, bit<9> intf) {
+    @name("set_bd_dmac_intf") action set_bd_dmac_intf_0(bit<24> bd, bit<48> dmac, bit<9> intf) {
         meta.fwd.out_bd = bd;
         hdr.ethernet.dstAddr = dmac;
         standard_metadata.egress_spec = intf;
         hdr.ipv4.ttl = hdr.ipv4.ttl + 8w255;
     }
-    table mac_da {
+    @name("mac_da") table mac_da_0 {
         key = {
             meta.fwd.l2ptr: exact @name("meta.fwd.l2ptr") ;
         }
         actions = {
-            set_bd_dmac_intf();
+            set_bd_dmac_intf_0();
             my_drop(standard_metadata);
         }
         default_action = my_drop(standard_metadata);
     }
     apply {
         if (standard_metadata.instance_type == 32w6) {
-            c_fill_ipv4_address.apply(hdr.ipv4.srcAddr, 8w10, 8w252, 8w129, 8w2);
+            c_fill_ipv4_address_0.apply(hdr.ipv4.srcAddr, 8w10, 8w252, 8w129, 8w2);
             meta.fwd.l2ptr = 32w0xe50b;
         } else if (standard_metadata.instance_type == 32w4) {
-            c_fill_ipv4_address.apply(hdr.ipv4.srcAddr, 8w10, 8w199, 8w86, 8w99);
+            c_fill_ipv4_address_0.apply(hdr.ipv4.srcAddr, 8w10, 8w199, 8w86, 8w99);
             meta.fwd.l2ptr = 32w0xec1c;
         } else {
-            ipv4_da_lpm.apply();
+            ipv4_da_lpm_0.apply();
         }
         if (meta.fwd.l2ptr != 32w0) {
-            mac_da.apply();
+            mac_da_0.apply();
         }
     }
 }
 control egress(inout headers_t hdr, inout meta_t meta, inout standard_metadata_t standard_metadata) {
-    action set_out_bd(bit<24> bd) {
+    @name("set_out_bd") action set_out_bd_0(bit<24> bd) {
         meta.fwd.out_bd = bd;
     }
-    table get_multicast_copy_out_bd {
+    @name("get_multicast_copy_out_bd") table get_multicast_copy_out_bd_0 {
         key = {
             standard_metadata.mcast_grp : exact @name("standard_metadata.mcast_grp") ;
             standard_metadata.egress_rid: exact @name("standard_metadata.egress_rid") ;
         }
         actions = {
-            set_out_bd();
+            set_out_bd_0();
             @defaultonly NoAction();
         }
         default_action = NoAction();
     }
-    action rewrite_mac(bit<48> smac) {
+    @name("rewrite_mac") action rewrite_mac_0(bit<48> smac) {
         hdr.ethernet.srcAddr = smac;
     }
-    action do_recirculate(bit<32> new_ipv4_dstAddr) {
+    @name("do_recirculate") action do_recirculate_0(bit<32> new_ipv4_dstAddr) {
         hdr.ipv4.dstAddr = new_ipv4_dstAddr;
         recirculate<tuple<>>({  });
     }
-    action do_clone_e2e(bit<48> smac) {
+    @name("do_clone_e2e") action do_clone_e2e_0(bit<48> smac) {
         hdr.ethernet.srcAddr = smac;
         clone3<tuple<>>(CloneType.E2E, 32w11, {  });
     }
-    table send_frame {
+    @name("send_frame") table send_frame_0 {
         key = {
             meta.fwd.out_bd: exact @name("meta.fwd.out_bd") ;
         }
         actions = {
-            rewrite_mac();
-            do_recirculate();
-            do_clone_e2e();
+            rewrite_mac_0();
+            do_recirculate_0();
+            do_clone_e2e_0();
             my_drop(standard_metadata);
         }
         default_action = my_drop(standard_metadata);
@@ -165,9 +165,9 @@ control egress(inout headers_t hdr, inou
             hdr.switch_to_cpu.word1 = 32w0x5a5a5a5a;
         } else {
             if (standard_metadata.instance_type == 32w5) {
-                get_multicast_copy_out_bd.apply();
+                get_multicast_copy_out_bd_0.apply();
             }
-            send_frame.apply();
+            send_frame_0.apply();
         }
     }
 }
