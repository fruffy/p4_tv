--- before_pass
+++ after_pass
@@ -51,22 +51,34 @@ struct headers {
 struct metadata {
 }
 parser parserI(packet_in pkt, out headers hdr, inout metadata meta, inout standard_metadata_t stdmeta) {
+    IPv4_up_to_ihl_only_h tmp;
+    bit<9> tmp_0;
+    bit<32> tmp_1;
     state start {
-        pkt.extract<ethernet_t>(hdr.ethernet);
+        {
+            pkt.extract<ethernet_t>(hdr.ethernet);
+        }
         transition select(hdr.ethernet.etherType) {
             16w0x800: parse_ipv4;
             default: accept;
         }
     }
     state parse_ipv4 {
-        pkt.extract<ipv4_t>(hdr.ipv4, (bit<32>)((bit<9>)(pkt.lookahead<IPv4_up_to_ihl_only_h>()).ihl << 3));
+        {
+            tmp = pkt.lookahead<IPv4_up_to_ihl_only_h>();
+            tmp_0 = (bit<9>)tmp.ihl << 3;
+            tmp_1 = (bit<32>)tmp_0;
+            pkt.extract<ipv4_t>(hdr.ipv4, tmp_1);
+        }
         transition select(hdr.ipv4.protocol) {
             8w6: parse_tcp;
             default: accept;
         }
     }
     state parse_tcp {
-        pkt.extract<tcp_t>(hdr.tcp);
+        {
+            pkt.extract<tcp_t>(hdr.tcp);
+        }
         transition accept;
     }
 }
@@ -75,10 +87,18 @@ control cIngress(inout headers hdr, inou
     bit<1> ipv4_valid_0;
     bit<1> tcp_valid_0;
     apply {
-        eth_valid_0 = (bit<1>)hdr.ethernet.isValid();
-        ipv4_valid_0 = (bit<1>)hdr.ipv4.isValid();
-        tcp_valid_0 = (bit<1>)hdr.tcp.isValid();
-        hdr.ethernet.dstAddr = 31w0 ++ eth_valid_0 ++ 7w0 ++ ipv4_valid_0 ++ 7w0 ++ tcp_valid_0;
+        {
+            eth_valid_0 = (bit<1>)hdr.ethernet.isValid();
+        }
+        {
+            ipv4_valid_0 = (bit<1>)hdr.ipv4.isValid();
+        }
+        {
+            tcp_valid_0 = (bit<1>)hdr.tcp.isValid();
+        }
+        {
+            hdr.ethernet.dstAddr = 31w0 ++ eth_valid_0 ++ 7w0 ++ ipv4_valid_0 ++ 7w0 ++ tcp_valid_0;
+        }
     }
 }
 control cEgress(inout headers hdr, inout metadata meta, inout standard_metadata_t stdmeta) {
@@ -95,9 +115,15 @@ control updateChecksum(inout headers hdr
 }
 control DeparserI(packet_out packet, in headers hdr) {
     apply {
-        packet.emit<ethernet_t>(hdr.ethernet);
-        packet.emit<ipv4_t>(hdr.ipv4);
-        packet.emit<tcp_t>(hdr.tcp);
+        {
+            packet.emit<ethernet_t>(hdr.ethernet);
+        }
+        {
+            packet.emit<ipv4_t>(hdr.ipv4);
+        }
+        {
+            packet.emit<tcp_t>(hdr.tcp);
+        }
     }
 }
 V1Switch<headers, metadata>(parserI(), verifyChecksum(), cIngress(), cEgress(), updateChecksum(), DeparserI()) main;
