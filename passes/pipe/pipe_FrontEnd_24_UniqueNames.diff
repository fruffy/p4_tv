--- before_pass
+++ after_pass
@@ -26,53 +26,53 @@ extern bs {
 struct Packet_data {
 }
 control T_host(inout TArg1 tArg1, in TArg2 aArg2)(bit<32> t2Size) {
-    action B_action(out bit<9> barg, BParamType bData) {
+    @name("B_action") action B_action_0(out bit<9> barg, BParamType bData) {
         barg = bData;
     }
-    action C_action(bit<9> cData) {
+    @name("C_action") action C_action_0(bit<9> cData) {
         tArg1.field1 = cData;
     }
-    table T {
+    @name("T") table T_0 {
         key = {
             tArg1.field1: ternary @name("tArg1.field1") ;
             aArg2.field2: exact @name("aArg2.field2") ;
         }
         actions = {
-            B_action(tArg1.field1);
-            C_action();
+            B_action_0(tArg1.field1);
+            C_action_0();
         }
         size = t2Size;
-        const default_action = C_action(9w5);
+        const default_action = C_action_0(9w5);
     }
     apply {
-        T.apply();
+        T_0.apply();
     }
 }
 control P_pipe(inout TArg1 pArg1, inout TArg2 pArg2)(bit<32> t2Size) {
-    T_host(t2Size) thost;
-    action Drop() {
+    @name("thost") T_host(t2Size) thost_0;
+    @name("Drop") action Drop_0() {
         pArg1.drop = true;
     }
-    table Tinner {
+    @name("Tinner") table Tinner_0 {
         key = {
             pArg1.field1: ternary @name("pArg1.field1") ;
         }
         actions = {
-            Drop();
+            Drop_0();
             NoAction();
         }
         const default_action = NoAction();
     }
     apply {
-        thost.apply(pArg1, pArg2);
-        thost.apply(pArg1, pArg2);
-        Tinner.apply();
+        thost_0.apply(pArg1, pArg2);
+        thost_0.apply(pArg1, pArg2);
+        Tinner_0.apply();
     }
 }
 control Q_pipe(inout TArg1 qArg1, inout TArg2 qArg2) {
-    P_pipe(32w5) p1;
+    @name("p1") P_pipe(32w5) p1_0;
     apply {
-        p1.apply(qArg1, qArg2);
+        p1_0.apply(qArg1, qArg2);
     }
 }
 parser prs(bs b, out Packet_data p);
