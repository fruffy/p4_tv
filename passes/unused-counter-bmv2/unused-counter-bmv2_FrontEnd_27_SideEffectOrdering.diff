--- before_pass
+++ after_pass
@@ -10,7 +10,9 @@ struct Meta {
 }
 parser p(packet_in b, out Headers h, inout Meta m, inout standard_metadata_t sm) {
     state start {
-        b.extract<hdr>(h.h);
+        {
+            b.extract<hdr>(h.h);
+        }
         transition accept;
     }
 }
@@ -28,14 +30,18 @@ control egress(inout Headers h, inout Me
 }
 control deparser(packet_out b, in Headers h) {
     apply {
-        b.emit<hdr>(h.h);
+        {
+            b.emit<hdr>(h.h);
+        }
     }
 }
 control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
     @name("c") direct_counter(CounterType.packets) c_0;
     @name("c1") direct_counter(CounterType.packets) c1_0;
     @name("my_action") action my_action_0(bit<9> a) {
-        sm.egress_spec = a;
+        {
+            sm.egress_spec = a;
+        }
     }
     @name("t") table t_0 {
         actions = {
@@ -45,7 +51,9 @@ control ingress(inout Headers h, inout M
         counters = c_0;
     }
     apply {
-        t_0.apply();
+        {
+            t_0.apply();
+        }
     }
 }
 V1Switch<Headers, Meta>(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
