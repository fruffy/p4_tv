--- before_pass
+++ after_pass
@@ -21,28 +21,53 @@ struct headers {
     addr_t      addr_dst;
     addr_t      addr_src;
 }
-parser ProtAddrParser(packet_in packet, in bit<8> addrType, out addr_t addr) {
+parser ProtParser(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
+    bit<8> addrType_0;
+    addr_t addr_0;
     state start {
-        transition select(addrType) {
-            8w0x1: ipv4;
-            8w0x2: ipv6;
+        packet.extract<addr_type_t>(hdr.addr_type);
+        addrType_0 = hdr.addr_type.dstType;
+        addr_0.ipv4.setInvalid();
+        addr_0.ipv6.setInvalid();
+        transition ProtAddrParser_start;
+    }
+    state ProtAddrParser_start {
+        transition select(addrType_0) {
+            8w0x1: ProtAddrParser_ipv4;
+            8w0x2: ProtAddrParser_ipv6;
         }
     }
-    state ipv4 {
-        packet.extract<addr_ipv4_t>(addr.ipv4);
-        transition accept;
+    state ProtAddrParser_ipv4 {
+        packet.extract<addr_ipv4_t>(addr_0.ipv4);
+        transition start_0;
     }
-    state ipv6 {
-        packet.extract<addr_ipv6_t>(addr.ipv6);
-        transition accept;
+    state ProtAddrParser_ipv6 {
+        packet.extract<addr_ipv6_t>(addr_0.ipv6);
+        transition start_0;
     }
-}
-parser ProtParser(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name("addrParser") ProtAddrParser() addrParser_0;
-    state start {
-        packet.extract<addr_type_t>(hdr.addr_type);
-        addrParser_0.apply(packet, hdr.addr_type.dstType, hdr.addr_dst);
-        addrParser_0.apply(packet, hdr.addr_type.srcType, hdr.addr_src);
+    state start_0 {
+        hdr.addr_dst = addr_0;
+        addrType_0 = hdr.addr_type.srcType;
+        addr_0.ipv4.setInvalid();
+        addr_0.ipv6.setInvalid();
+        transition ProtAddrParser_start_0;
+    }
+    state ProtAddrParser_start_0 {
+        transition select(addrType_0) {
+            8w0x1: ProtAddrParser_ipv4_0;
+            8w0x2: ProtAddrParser_ipv6_0;
+        }
+    }
+    state ProtAddrParser_ipv4_0 {
+        packet.extract<addr_ipv4_t>(addr_0.ipv4);
+        transition start_1;
+    }
+    state ProtAddrParser_ipv6_0 {
+        packet.extract<addr_ipv6_t>(addr_0.ipv6);
+        transition start_1;
+    }
+    state start_1 {
+        hdr.addr_src = addr_0;
         transition accept;
     }
 }
