--- before_pass
+++ after_pass
@@ -18,46 +18,46 @@ parser ParserImpl(packet_in packet, out
     state parse_ethernet {
         packet.extract(hdr.ethernet);
         transition select(hdr.ethernet.dstAddr[47:40], hdr.ethernet.dstAddr[39:32], hdr.ethernet.dstAddr[31:24]) {
-            (0xca, 0xfe, 0xad): a7;
-            (0xca, 0xfe, default): a6;
-            (0xca, default, 0xad): a5;
-            (default, 0xfe, 0xad): a3;
-            (0xca, default, default): a4;
-            (default, 0xfe, default): a2;
-            (default, default, 0xad): a1;
+            (8w0xca, 8w0xfe, 8w0xad): a7;
+            (8w0xca, 8w0xfe, default): a6;
+            (8w0xca, default, 8w0xad): a5;
+            (default, 8w0xfe, 8w0xad): a3;
+            (8w0xca, default, default): a4;
+            (default, 8w0xfe, default): a2;
+            (default, default, 8w0xad): a1;
             (default, default, default): a0;
         }
     }
     state a0 {
-        meta.transition_taken = 0xa0;
+        meta.transition_taken = (bit<16>)16w0xa0;
         transition accept;
     }
     state a1 {
-        meta.transition_taken = 0xa1;
+        meta.transition_taken = (bit<16>)16w0xa1;
         transition accept;
     }
     state a2 {
-        meta.transition_taken = 0xa2;
+        meta.transition_taken = (bit<16>)16w0xa2;
         transition accept;
     }
     state a3 {
-        meta.transition_taken = 0xa3;
+        meta.transition_taken = (bit<16>)16w0xa3;
         transition accept;
     }
     state a4 {
-        meta.transition_taken = 0xa4;
+        meta.transition_taken = (bit<16>)16w0xa4;
         transition accept;
     }
     state a5 {
-        meta.transition_taken = 0xa5;
+        meta.transition_taken = (bit<16>)16w0xa5;
         transition accept;
     }
     state a6 {
-        meta.transition_taken = 0xa6;
+        meta.transition_taken = (bit<16>)16w0xa6;
         transition accept;
     }
     state a7 {
-        meta.transition_taken = 0xa7;
+        meta.transition_taken = (bit<16>)16w0xa7;
         transition accept;
     }
 }
