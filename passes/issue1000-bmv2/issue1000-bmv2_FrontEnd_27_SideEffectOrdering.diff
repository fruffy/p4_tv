--- before_pass
+++ after_pass
@@ -13,7 +13,9 @@ struct headers {
 }
 parser ParserImpl(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     state start {
-        packet.extract<ethernet_t>(hdr.ethernet);
+        {
+            packet.extract<ethernet_t>(hdr.ethernet);
+        }
         transition select(hdr.ethernet.dstAddr[47:40], hdr.ethernet.dstAddr[39:32], hdr.ethernet.dstAddr[31:24]) {
             (8w0xca, 8w0xfe, 8w0xad): a7;
             (8w0xca, 8w0xfe, default): a6;
@@ -26,41 +28,59 @@ parser ParserImpl(packet_in packet, out
         }
     }
     state a0 {
-        meta.transition_taken = 16w0xa0;
+        {
+            meta.transition_taken = 16w0xa0;
+        }
         transition accept;
     }
     state a1 {
-        meta.transition_taken = 16w0xa1;
+        {
+            meta.transition_taken = 16w0xa1;
+        }
         transition accept;
     }
     state a2 {
-        meta.transition_taken = 16w0xa2;
+        {
+            meta.transition_taken = 16w0xa2;
+        }
         transition accept;
     }
     state a3 {
-        meta.transition_taken = 16w0xa3;
+        {
+            meta.transition_taken = 16w0xa3;
+        }
         transition accept;
     }
     state a4 {
-        meta.transition_taken = 16w0xa4;
+        {
+            meta.transition_taken = 16w0xa4;
+        }
         transition accept;
     }
     state a5 {
-        meta.transition_taken = 16w0xa5;
+        {
+            meta.transition_taken = 16w0xa5;
+        }
         transition accept;
     }
     state a6 {
-        meta.transition_taken = 16w0xa6;
+        {
+            meta.transition_taken = 16w0xa6;
+        }
         transition accept;
     }
     state a7 {
-        meta.transition_taken = 16w0xa7;
+        {
+            meta.transition_taken = 16w0xa7;
+        }
         transition accept;
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     apply {
-        hdr.ethernet.etherType = meta.transition_taken;
+        {
+            hdr.ethernet.etherType = meta.transition_taken;
+        }
     }
 }
 control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
@@ -69,7 +89,9 @@ control egress(inout headers hdr, inout
 }
 control DeparserImpl(packet_out packet, in headers hdr) {
     apply {
-        packet.emit<ethernet_t>(hdr.ethernet);
+        {
+            packet.emit<ethernet_t>(hdr.ethernet);
+        }
     }
 }
 control verifyChecksum(inout headers hdr, inout metadata meta) {
