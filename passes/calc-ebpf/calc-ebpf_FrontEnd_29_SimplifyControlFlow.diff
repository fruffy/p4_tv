--- before_pass
+++ after_pass
@@ -23,9 +23,7 @@ parser Parser(packet_in packet, out head
     p4calc_t tmp_1;
     p4calc_t tmp_2;
     state start {
-        {
-            packet.extract<ethernet_t>(hdr.ethernet);
-        }
+        packet.extract<ethernet_t>(hdr.ethernet);
         transition select(hdr.ethernet.etherType) {
             16w0x1234: check_p4calc;
             default: accept;
@@ -41,57 +39,35 @@ parser Parser(packet_in packet, out head
         }
     }
     state parse_p4calc {
-        {
-            packet.extract<p4calc_t>(hdr.p4calc);
-        }
+        packet.extract<p4calc_t>(hdr.p4calc);
         transition accept;
     }
 }
 control Ingress(inout headers hdr, out bool xout) {
     bit<48> tmp_0;
     @name("send_back") action send_back_0(bit<32> result) {
-        {
-            tmp_0 = hdr.ethernet.dstAddr;
-        }
-        {
-            hdr.ethernet.dstAddr = hdr.ethernet.srcAddr;
-        }
-        {
-            hdr.ethernet.srcAddr = tmp_0;
-        }
-        {
-            hdr.p4calc.res = result;
-        }
+        tmp_0 = hdr.ethernet.dstAddr;
+        hdr.ethernet.dstAddr = hdr.ethernet.srcAddr;
+        hdr.ethernet.srcAddr = tmp_0;
+        hdr.p4calc.res = result;
     }
     @name("operation_add") action operation_add_0() {
-        {
-            send_back_0(hdr.p4calc.operand_a + hdr.p4calc.operand_b);
-        }
+        send_back_0(hdr.p4calc.operand_a + hdr.p4calc.operand_b);
     }
     @name("operation_sub") action operation_sub_0() {
-        {
-            send_back_0(hdr.p4calc.operand_a - hdr.p4calc.operand_b);
-        }
+        send_back_0(hdr.p4calc.operand_a - hdr.p4calc.operand_b);
     }
     @name("operation_and") action operation_and_0() {
-        {
-            send_back_0(hdr.p4calc.operand_a & hdr.p4calc.operand_b);
-        }
+        send_back_0(hdr.p4calc.operand_a & hdr.p4calc.operand_b);
     }
     @name("operation_or") action operation_or_0() {
-        {
-            send_back_0(hdr.p4calc.operand_a | hdr.p4calc.operand_b);
-        }
+        send_back_0(hdr.p4calc.operand_a | hdr.p4calc.operand_b);
     }
     @name("operation_xor") action operation_xor_0() {
-        {
-            send_back_0(hdr.p4calc.operand_a ^ hdr.p4calc.operand_b);
-        }
+        send_back_0(hdr.p4calc.operand_a ^ hdr.p4calc.operand_b);
     }
     @name("operation_drop") action operation_drop_0() {
-        {
-            xout = false;
-        }
+        xout = false;
     }
     @name("calculate") table calculate_0 {
         key = {
@@ -116,9 +92,7 @@ control Ingress(inout headers hdr, out b
         implementation = hash_table(32w8);
     }
     apply {
-        {
-            xout = true;
-        }
+        xout = true;
         if (hdr.p4calc.isValid()) {
             calculate_0.apply();
         } else {
