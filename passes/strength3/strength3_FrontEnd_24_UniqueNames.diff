--- before_pass
+++ after_pass
@@ -13,45 +13,45 @@ struct Meta {
     bit<8> y;
 }
 control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
-    action case0() {
+    @name("case0") action case0_0() {
         h.h.c = (bit<8>)((16w0 ++ h.h.a)[15:0] ++ 16w0[15:0]);
     }
-    action case1() {
+    @name("case1") action case1_0() {
         h.h.c = (bit<8>)h.h.a[15:0];
     }
-    action case2() {
+    @name("case2") action case2_0() {
         h.h.c = (bit<8>)16w0[15:0];
     }
-    action case3() {
+    @name("case3") action case3_0() {
         h.h.c = h.h.a[7:0];
     }
-    action case4() {
+    @name("case4") action case4_0() {
         h.h.c = (bit<8>)(16w0[7:0] ++ h.h.a[15:0]);
     }
-    action case5() {
+    @name("case5") action case5_0() {
         h.h.c = (bit<8>)(16w0[7:0] ++ h.h.a[15:8]);
     }
-    action case6() {
+    @name("case6") action case6_0() {
         h.h.c = (bit<8>)(16w0[15:0] ++ h.h.a[15:8]);
     }
-    action case7() {
+    @name("case7") action case7_0() {
         h.h.c = (bit<8>)(16w0 ++ h.h.a >> 3)[31:8];
     }
-    table t {
+    @name("t") table t_0 {
         actions = {
-            case0();
-            case1();
-            case2();
-            case3();
-            case4();
-            case5();
-            case6();
-            case7();
+            case0_0();
+            case1_0();
+            case2_0();
+            case3_0();
+            case4_0();
+            case5_0();
+            case6_0();
+            case7_0();
         }
-        const default_action = case0();
+        const default_action = case0_0();
     }
     apply {
-        t.apply();
+        t_0.apply();
     }
 }
 parser p(packet_in b, out Headers h, inout Meta m, inout standard_metadata_t sm) {
