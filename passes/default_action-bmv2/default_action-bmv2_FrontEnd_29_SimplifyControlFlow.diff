--- before_pass
+++ after_pass
@@ -6,9 +6,7 @@ header hdr {
 }
 control compute(inout hdr h) {
     @name("add") action add_0(bit<32> data) {
-        {
-            h.b = h.a + data;
-        }
+        h.b = h.a + data;
     }
     @name("t") table t_0 {
         actions = {
@@ -17,9 +15,7 @@ control compute(inout hdr h) {
         const default_action = add_0(32w10);
     }
     apply {
-        {
-            t_0.apply();
-        }
+        t_0.apply();
     }
 }
 struct Headers {
@@ -29,9 +25,7 @@ struct Meta {
 }
 parser p(packet_in b, out Headers h, inout Meta m, inout standard_metadata_t sm) {
     state start {
-        {
-            b.extract<hdr>(h.h);
-        }
+        b.extract<hdr>(h.h);
         transition accept;
     }
 }
@@ -49,20 +43,14 @@ control egress(inout Headers h, inout Me
 }
 control deparser(packet_out b, in Headers h) {
     apply {
-        {
-            b.emit<hdr>(h.h);
-        }
+        b.emit<hdr>(h.h);
     }
 }
 control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
     @name("c") compute() c_0;
     apply {
-        {
-            c_0.apply(h.h);
-        }
-        {
-            sm.egress_spec = 9w0;
-        }
+        c_0.apply(h.h);
+        sm.egress_spec = 9w0;
     }
 }
 V1Switch<Headers, Meta>(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
