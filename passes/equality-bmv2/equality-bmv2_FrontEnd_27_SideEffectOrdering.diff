--- before_pass
+++ after_pass
@@ -16,18 +16,30 @@ struct headers {
 }
 parser p(packet_in b, out headers hdr, inout metadata meta, inout standard_metadata_t stdmeta) {
     state start {
-        b.extract<H>(hdr.h, 32w32);
-        b.extract<H>(hdr.a.next, 32w32);
-        b.extract<H>(hdr.a.next, 32w32);
+        {
+            b.extract<H>(hdr.h, 32w32);
+        }
+        {
+            b.extract<H>(hdr.a.next, 32w32);
+        }
+        {
+            b.extract<H>(hdr.a.next, 32w32);
+        }
         transition accept;
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t stdmeta) {
     H[2] tmp_0;
     apply {
-        hdr.same.setValid();
-        hdr.same.same = 8w0;
-        stdmeta.egress_spec = 9w0;
+        {
+            hdr.same.setValid();
+        }
+        {
+            hdr.same.same = 8w0;
+        }
+        {
+            stdmeta.egress_spec = 9w0;
+        }
         if (hdr.h.s == hdr.a[0].s) {
             hdr.same.same = hdr.same.same | 8w1;
         }
@@ -37,8 +49,12 @@ control ingress(inout headers hdr, inout
         if (hdr.h == hdr.a[0]) {
             hdr.same.same = hdr.same.same | 8w4;
         }
-        tmp_0[0] = hdr.h;
-        tmp_0[1] = hdr.a[0];
+        {
+            tmp_0[0] = hdr.h;
+        }
+        {
+            tmp_0[1] = hdr.a[0];
+        }
         if (tmp_0 == hdr.a) {
             hdr.same.same = hdr.same.same | 8w8;
         }
@@ -58,7 +74,9 @@ control uc(inout headers hdr, inout meta
 }
 control deparser(packet_out packet, in headers hdr) {
     apply {
-        packet.emit<headers>(hdr);
+        {
+            packet.emit<headers>(hdr);
+        }
     }
 }
 V1Switch<headers, metadata>(p(), vc(), ingress(), egress(), uc(), deparser()) main;
