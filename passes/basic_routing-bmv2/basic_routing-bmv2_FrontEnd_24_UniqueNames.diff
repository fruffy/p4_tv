--- before_pass
+++ after_pass
@@ -45,16 +45,16 @@ parser ParserImpl(packet_in packet, out
     }
 }
 control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    action on_miss() {
+    @name("on_miss") action on_miss_0() {
     }
-    action rewrite_src_dst_mac(bit<48> smac, bit<48> dmac) {
+    @name("rewrite_src_dst_mac") action rewrite_src_dst_mac_0(bit<48> smac, bit<48> dmac) {
         hdr.ethernet.srcAddr = smac;
         hdr.ethernet.dstAddr = dmac;
     }
-    table rewrite_mac {
+    @name("rewrite_mac") table rewrite_mac_0 {
         actions = {
-            on_miss();
-            rewrite_src_dst_mac();
+            on_miss_0();
+            rewrite_src_dst_mac_0();
             @defaultonly NoAction();
         }
         key = {
@@ -64,28 +64,28 @@ control egress(inout headers hdr, inout
         default_action = NoAction();
     }
     apply {
-        rewrite_mac.apply();
+        rewrite_mac_0.apply();
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    action set_vrf(bit<12> vrf) {
+    @name("set_vrf") action set_vrf_0(bit<12> vrf) {
         meta.ingress_metadata.vrf = vrf;
     }
-    action on_miss() {
+    @name("on_miss") action on_miss_1() {
     }
-    action fib_hit_nexthop(bit<16> nexthop_index) {
+    @name("fib_hit_nexthop") action fib_hit_nexthop_0(bit<16> nexthop_index) {
         meta.ingress_metadata.nexthop_index = nexthop_index;
         hdr.ipv4.ttl = hdr.ipv4.ttl + 8w255;
     }
-    action set_egress_details(bit<9> egress_spec) {
+    @name("set_egress_details") action set_egress_details_0(bit<9> egress_spec) {
         standard_metadata.egress_spec = egress_spec;
     }
-    action set_bd(bit<16> bd) {
+    @name("set_bd") action set_bd_0(bit<16> bd) {
         meta.ingress_metadata.bd = bd;
     }
-    table bd {
+    @name("bd") table bd_0 {
         actions = {
-            set_vrf();
+            set_vrf_0();
             @defaultonly NoAction();
         }
         key = {
@@ -94,10 +94,10 @@ control ingress(inout headers hdr, inout
         size = 65536;
         default_action = NoAction();
     }
-    table ipv4_fib {
+    @name("ipv4_fib") table ipv4_fib_0 {
         actions = {
-            on_miss();
-            fib_hit_nexthop();
+            on_miss_1();
+            fib_hit_nexthop_0();
             @defaultonly NoAction();
         }
         key = {
@@ -107,10 +107,10 @@ control ingress(inout headers hdr, inout
         size = 131072;
         default_action = NoAction();
     }
-    table ipv4_fib_lpm {
+    @name("ipv4_fib_lpm") table ipv4_fib_lpm_0 {
         actions = {
-            on_miss();
-            fib_hit_nexthop();
+            on_miss_1();
+            fib_hit_nexthop_0();
             @defaultonly NoAction();
         }
         key = {
@@ -120,10 +120,10 @@ control ingress(inout headers hdr, inout
         size = 16384;
         default_action = NoAction();
     }
-    table nexthop {
+    @name("nexthop") table nexthop_0 {
         actions = {
-            on_miss();
-            set_egress_details();
+            on_miss_1();
+            set_egress_details_0();
             @defaultonly NoAction();
         }
         key = {
@@ -132,9 +132,9 @@ control ingress(inout headers hdr, inout
         size = 32768;
         default_action = NoAction();
     }
-    table port_mapping {
+    @name("port_mapping") table port_mapping_0 {
         actions = {
-            set_bd();
+            set_bd_0();
             @defaultonly NoAction();
         }
         key = {
@@ -145,14 +145,14 @@ control ingress(inout headers hdr, inout
     }
     apply {
         if (hdr.ipv4.isValid()) {
-            port_mapping.apply();
-            bd.apply();
-            switch (ipv4_fib.apply().action_run) {
-                on_miss: {
-                    ipv4_fib_lpm.apply();
+            port_mapping_0.apply();
+            bd_0.apply();
+            switch (ipv4_fib_0.apply().action_run) {
+                on_miss_1: {
+                    ipv4_fib_lpm_0.apply();
                 }
             }
-            nexthop.apply();
+            nexthop_0.apply();
         }
     }
 }
