--- before_pass
+++ after_pass
@@ -45,110 +45,130 @@ parser ParserImpl(packet_in packet, out
     }
 }
 control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name("on_miss") action on_miss() {
+    @name(".NoAction") action NoAction_2() {
     }
-    @name("rewrite_src_dst_mac") action rewrite_src_dst_mac(bit<48> smac, bit<48> dmac) {
+    @name("on_miss") action on_miss_0() {
+    }
+    @name("rewrite_src_dst_mac") action rewrite_src_dst_mac_0(bit<48> smac, bit<48> dmac) {
         hdr.ethernet.srcAddr = smac;
         hdr.ethernet.dstAddr = dmac;
     }
     @name("rewrite_mac") table rewrite_mac {
         actions = {
-            on_miss();
-            rewrite_src_dst_mac();
-            @defaultonly NoAction();
+            on_miss_0();
+            rewrite_src_dst_mac_0();
+            @defaultonly NoAction_2();
         }
         key = {
             meta.ingress_metadata.nexthop_index: exact @name("meta.ingress_metadata.nexthop_index") ;
         }
         size = 32768;
-        default_action = NoAction();
+        default_action = NoAction_2();
     }
     apply {
         rewrite_mac.apply();
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name("set_vrf") action set_vrf(bit<12> vrf) {
+    @name(".NoAction") action NoAction_3() {
+    }
+    @name(".NoAction") action NoAction_4() {
+    }
+    @name(".NoAction") action NoAction_5() {
+    }
+    @name(".NoAction") action NoAction_6() {
+    }
+    @name(".NoAction") action NoAction_7() {
+    }
+    @name("set_vrf") action set_vrf_0(bit<12> vrf) {
         meta.ingress_metadata.vrf = vrf;
     }
-    @name("on_miss") action on_miss_2() {
+    @name("on_miss") action on_miss_1() {
+    }
+    @name("on_miss") action on_miss_3() {
+    }
+    @name("on_miss") action on_miss_4() {
+    }
+    @name("fib_hit_nexthop") action fib_hit_nexthop_0(bit<16> nexthop_index) {
+        meta.ingress_metadata.nexthop_index = nexthop_index;
+        hdr.ipv4.ttl = hdr.ipv4.ttl + 8w255;
     }
-    @name("fib_hit_nexthop") action fib_hit_nexthop(bit<16> nexthop_index) {
+    @name("fib_hit_nexthop") action fib_hit_nexthop_1(bit<16> nexthop_index) {
         meta.ingress_metadata.nexthop_index = nexthop_index;
         hdr.ipv4.ttl = hdr.ipv4.ttl + 8w255;
     }
-    @name("set_egress_details") action set_egress_details(bit<9> egress_spec) {
+    @name("set_egress_details") action set_egress_details_0(bit<9> egress_spec) {
         standard_metadata.egress_spec = egress_spec;
     }
-    @name("set_bd") action set_bd(bit<16> bd) {
+    @name("set_bd") action set_bd_0(bit<16> bd) {
         meta.ingress_metadata.bd = bd;
     }
     @name("bd") table bd_1 {
         actions = {
-            set_vrf();
-            @defaultonly NoAction();
+            set_vrf_0();
+            @defaultonly NoAction_3();
         }
         key = {
             meta.ingress_metadata.bd: exact @name("meta.ingress_metadata.bd") ;
         }
         size = 65536;
-        default_action = NoAction();
+        default_action = NoAction_3();
     }
     @name("ipv4_fib") table ipv4_fib {
         actions = {
-            on_miss_2();
-            fib_hit_nexthop();
-            @defaultonly NoAction();
+            on_miss_1();
+            fib_hit_nexthop_0();
+            @defaultonly NoAction_4();
         }
         key = {
             meta.ingress_metadata.vrf: exact @name("meta.ingress_metadata.vrf") ;
             hdr.ipv4.dstAddr         : exact @name("hdr.ipv4.dstAddr") ;
         }
         size = 131072;
-        default_action = NoAction();
+        default_action = NoAction_4();
     }
     @name("ipv4_fib_lpm") table ipv4_fib_lpm {
         actions = {
-            on_miss_2();
-            fib_hit_nexthop();
-            @defaultonly NoAction();
+            on_miss_3();
+            fib_hit_nexthop_1();
+            @defaultonly NoAction_5();
         }
         key = {
             meta.ingress_metadata.vrf: exact @name("meta.ingress_metadata.vrf") ;
             hdr.ipv4.dstAddr         : lpm @name("hdr.ipv4.dstAddr") ;
         }
         size = 16384;
-        default_action = NoAction();
+        default_action = NoAction_5();
     }
     @name("nexthop") table nexthop {
         actions = {
-            on_miss_2();
-            set_egress_details();
-            @defaultonly NoAction();
+            on_miss_4();
+            set_egress_details_0();
+            @defaultonly NoAction_6();
         }
         key = {
             meta.ingress_metadata.nexthop_index: exact @name("meta.ingress_metadata.nexthop_index") ;
         }
         size = 32768;
-        default_action = NoAction();
+        default_action = NoAction_6();
     }
     @name("port_mapping") table port_mapping {
         actions = {
-            set_bd();
-            @defaultonly NoAction();
+            set_bd_0();
+            @defaultonly NoAction_7();
         }
         key = {
             standard_metadata.ingress_port: exact @name("standard_metadata.ingress_port") ;
         }
         size = 32768;
-        default_action = NoAction();
+        default_action = NoAction_7();
     }
     apply {
         if (hdr.ipv4.isValid()) {
             port_mapping.apply();
             bd_1.apply();
             switch (ipv4_fib.apply().action_run) {
-                on_miss_2: {
+                on_miss_1: {
                     ipv4_fib_lpm.apply();
                 }
             }
