--- before_pass
+++ after_pass
@@ -14,24 +14,16 @@ struct Meta {
 }
 control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
     @name("case0") action case0_0() {
-        {
-            h.h.c = ((bit<12>)h.h.a)[11:4];
-        }
+        h.h.c = ((bit<12>)h.h.a)[11:4];
     }
     @name("case1") action case1_0() {
-        {
-            h.h.c = (bit<8>)h.h.a[14:3][8:4];
-        }
+        h.h.c = (bit<8>)h.h.a[14:3][8:4];
     }
     @name("case2") action case2_0() {
-        {
-            h.h.c = (bit<8>)(16w0[15:0] ++ h.h.a[15:8]);
-        }
+        h.h.c = (bit<8>)(16w0[15:0] ++ h.h.a[15:8]);
     }
     @name("case3") action case3_0() {
-        {
-            h.h.c = ((int<32>)(int<16>)h.h.a)[14:2][10:3];
-        }
+        h.h.c = ((int<32>)(int<16>)h.h.a)[14:2][10:3];
     }
     @name("t") table t_0 {
         actions = {
@@ -43,16 +35,12 @@ control ingress(inout Headers h, inout M
         const default_action = case0_0();
     }
     apply {
-        {
-            t_0.apply();
-        }
+        t_0.apply();
     }
 }
 parser p(packet_in b, out Headers h, inout Meta m, inout standard_metadata_t sm) {
     state start {
-        {
-            b.extract<hdr>(h.h);
-        }
+        b.extract<hdr>(h.h);
         transition accept;
     }
 }
@@ -70,9 +58,7 @@ control egress(inout Headers h, inout Me
 }
 control deparser(packet_out b, in Headers h) {
     apply {
-        {
-            b.emit<hdr>(h.h);
-        }
+        b.emit<hdr>(h.h);
     }
 }
 V1Switch<Headers, Meta>(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
