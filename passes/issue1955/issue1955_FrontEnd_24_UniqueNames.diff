--- before_pass
+++ after_pass
@@ -33,11 +33,11 @@ extern E {
     void g();
 }
 parser subParser(packet_in packet, inout ethernet_t eth, inout ipv4_t ipv4) {
-    value_set<bit<16>>(8) ipv4_ethertypes;
+    @name("ipv4_ethertypes") value_set<bit<16>>(8) ipv4_ethertypes_0;
     state start {
         packet.extract<ethernet_t>(eth);
         transition select(eth.etherType) {
-            ipv4_ethertypes: parse_ipv4;
+            ipv4_ethertypes_0: parse_ipv4;
             default: accept;
         }
     }
@@ -47,11 +47,11 @@ parser subParser(packet_in packet, inout
     }
 }
 parser parserImpl(packet_in packet, out headers_t hdr, inout metadata_t meta, inout standard_metadata_t stdmeta) {
-    subParser() p1;
-    subParser() p2;
+    @name("p1") subParser() p1_0;
+    @name("p2") subParser() p2_0;
     state start {
-        p1.apply(packet, hdr.ethernet_1, hdr.ipv4_1);
-        p2.apply(packet, hdr.ethernet_2, hdr.ipv4_2);
+        p1_0.apply(packet, hdr.ethernet_1, hdr.ipv4_1);
+        p2_0.apply(packet, hdr.ethernet_2, hdr.ipv4_2);
         transition accept;
     }
 }
