--- before_pass
+++ after_pass
@@ -89,10 +89,28 @@ parser parserI(packet_in pkt, out header
     }
 }
 control cIngress(inout headers hdr, inout metadata meta, inout standard_metadata_t stdmeta) {
-    @name("foo1") action foo1(IPv4Address dstAddr) {
+    @name(".NoAction") action NoAction_1() {
+    }
+    @name(".NoAction") action NoAction_2() {
+    }
+    @name(".NoAction") action NoAction_3() {
+    }
+    @name("foo1") action foo1_0(IPv4Address dstAddr) {
         hdr.ipv4.dstAddr = dstAddr;
     }
-    @name("foo2") action foo2(IPv4Address srcAddr) {
+    @name("foo1") action foo1_1(IPv4Address dstAddr) {
+        hdr.ipv4.dstAddr = dstAddr;
+    }
+    @name("foo1") action foo1_2(IPv4Address dstAddr) {
+        hdr.ipv4.dstAddr = dstAddr;
+    }
+    @name("foo2") action foo2_0(IPv4Address srcAddr) {
+        hdr.ipv4.srcAddr = srcAddr;
+    }
+    @name("foo2") action foo2_1(IPv4Address srcAddr) {
+        hdr.ipv4.srcAddr = srcAddr;
+    }
+    @name("foo2") action foo2_2(IPv4Address srcAddr) {
         hdr.ipv4.srcAddr = srcAddr;
     }
     @name("t0") table t0 {
@@ -100,37 +118,37 @@ control cIngress(inout headers hdr, inou
             hdr.tcp.dstPort: exact @name("hdr.tcp.dstPort") ;
         }
         actions = {
-            foo1();
-            foo2();
-            @defaultonly NoAction();
+            foo1_0();
+            foo2_0();
+            @defaultonly NoAction_1();
         }
         size = 8;
-        default_action = NoAction();
+        default_action = NoAction_1();
     }
     @name("t1") table t1 {
         key = {
             hdr.tcp.dstPort: exact @name("hdr.tcp.dstPort") ;
         }
         actions = {
-            foo1();
-            foo2();
-            @defaultonly NoAction();
+            foo1_1();
+            foo2_1();
+            @defaultonly NoAction_2();
         }
         size = 8;
-        default_action = NoAction();
+        default_action = NoAction_2();
     }
     @name("t2") table t2 {
         actions = {
-            foo1();
-            foo2();
-            @defaultonly NoAction();
+            foo1_2();
+            foo2_2();
+            @defaultonly NoAction_3();
         }
         key = {
             hdr.tcp.srcPort: exact @name("hdr.tcp.srcPort") ;
             meta.hash1     : selector @name("meta.hash1") ;
         }
         size = 16;
-        default_action = NoAction();
+        default_action = NoAction_3();
     }
     apply {
         t0.apply();
