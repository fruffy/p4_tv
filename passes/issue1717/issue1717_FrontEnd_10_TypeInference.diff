--- before_pass
+++ after_pass
@@ -3,7 +3,7 @@ header H {
 }
 type bit<32> T;
 enum bit<16> E {
-    z = 0
+    z = 16w0
 }
 header H1 {
     bit<16> f;
@@ -37,9 +37,9 @@ bool v(in HU h) {
     Empty e;
     Nested n;
     S s;
-    const bool b = h.minSizeInBits() == 32;
-    bool b1 = h.h2.minSizeInBits == 32;
-    const bit<32> se = e.minSizeInBits() + n.minSizeInBits() + s.h3.minSizeInBytes();
-    const bit<32> sz = h.h1.minSizeInBits() + h.h2.minSizeInBits() + h.h2.minSizeInBytes();
-    return h.isValid() && h.h1.isValid == 0 && b && b1 && h.h2.minSizeInBits() < 5 + h.h1.minSizeInBits() && se < sz && s.h3.minSizeInBytes() << 3 == s.h3.minSizeInBits();
+    const bool b = 80 == 32;
+    bool b1 = h.h2.minSizeInBits == 8w32;
+    const bit<32> se = (bit<32>)(0 + 40 + 12);
+    const bit<32> sz = (bit<32>)(32 + 80 + 10);
+    return h.isValid() && h.h1.isValid == 32w0 && b && b1 && 80 < 5 + 32 && se < sz && 12 << 3 == 96;
 }
