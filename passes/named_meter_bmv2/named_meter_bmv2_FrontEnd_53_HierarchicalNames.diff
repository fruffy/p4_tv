--- before_pass
+++ after_pass
@@ -17,11 +17,11 @@ struct headers {
     ethernet_t ethernet;
 }
 parser ParserImpl(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name("parse_ethernet") state parse_ethernet {
+    @name("ParserImpl.parse_ethernet") state parse_ethernet {
         packet.extract<ethernet_t>(hdr.ethernet);
         transition accept;
     }
-    @name("start") state start {
+    @name("ParserImpl.start") state start {
         transition parse_ethernet;
     }
 }
@@ -34,13 +34,13 @@ control ingress(inout headers hdr, inout
     }
     @name(".NoAction") action NoAction_3() {
     }
-    @name("namedmeter") direct_meter<bit<32>>(MeterType.packets) my_meter_0;
-    @name("_drop") action _drop() {
+    @name("ingress.namedmeter") direct_meter<bit<32>>(MeterType.packets) my_meter_0;
+    @name("ingress._drop") action _drop() {
         mark_to_drop(standard_metadata);
     }
-    @name("_nop") action _nop() {
+    @name("ingress._nop") action _nop() {
     }
-    @name("m_filter") table m_filter_0 {
+    @name("ingress.m_filter") table m_filter_0 {
         actions = {
             _drop();
             _nop();
@@ -52,14 +52,14 @@ control ingress(inout headers hdr, inout
         size = 16;
         default_action = NoAction_0();
     }
-    @name("m_action") action m_action_0(bit<9> meter_idx) {
+    @name("ingress.m_action") action m_action_0(bit<9> meter_idx) {
         standard_metadata.egress_spec = 9w1;
         my_meter_0.read(meta.meta.meter_tag);
     }
-    @name("_nop") action _nop_0() {
+    @name("ingress._nop") action _nop_0() {
         my_meter_0.read(meta.meta.meter_tag);
     }
-    @name("m_table") table m_table_0 {
+    @name("ingress.m_table") table m_table_0 {
         actions = {
             m_action_0();
             _nop_0();
