--- before_pass
+++ after_pass
@@ -30,42 +30,46 @@ control egress(inout headers hdr, inout
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
+    @name(".NoAction") action NoAction_1() {
+    }
+    @name(".NoAction") action NoAction_2() {
+    }
     @name("namedmeter") direct_meter<bit<32>>(MeterType.packets) my_meter;
-    @name("_drop") action _drop() {
+    @name("_drop") action _drop_0() {
         mark_to_drop(standard_metadata);
     }
-    @name("_nop") action _nop() {
+    @name("_nop") action _nop_1() {
     }
     @name("m_filter") table m_filter {
         actions = {
-            _drop();
-            _nop();
-            NoAction();
+            _drop_0();
+            _nop_1();
+            NoAction_1();
         }
         key = {
             meta.meta.meter_tag: exact @name("meta.meta.meter_tag") ;
         }
         size = 16;
-        default_action = NoAction();
+        default_action = NoAction_1();
     }
-    @name("m_action") action m_action_0(bit<9> meter_idx) {
+    @name("m_action") action m_action(bit<9> meter_idx) {
         standard_metadata.egress_spec = 9w1;
         my_meter.read(meta.meta.meter_tag);
     }
-    @name("_nop") action _nop_0() {
+    @name("_nop") action _nop_2() {
         my_meter.read(meta.meta.meter_tag);
     }
     @name("m_table") table m_table {
         actions = {
-            m_action_0();
-            _nop_0();
-            NoAction();
+            m_action();
+            _nop_2();
+            NoAction_2();
         }
         key = {
             hdr.ethernet.srcAddr: exact @name("hdr.ethernet.srcAddr") ;
         }
         size = 16384;
-        default_action = NoAction();
+        default_action = NoAction_2();
         meters = my_meter;
     }
     apply {
