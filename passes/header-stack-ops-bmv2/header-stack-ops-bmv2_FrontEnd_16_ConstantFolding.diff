--- before_pass
+++ after_pass
@@ -87,34 +87,34 @@ control cDoOneOp(inout headers hdr, in b
         } else if (op[7:4] == 4w3) {
             if (op[3:0] == 4w0) {
                 hdr.h2[0].setValid();
-                hdr.h2[0].hdr_type = (bit<8>)8w2;
-                hdr.h2[0].f1 = (bit<8>)8w0xa0;
-                hdr.h2[0].f2 = (bit<8>)8w0xa;
-                hdr.h2[0].next_hdr_type = (bit<8>)8w9;
+                hdr.h2[0].hdr_type = 8w2;
+                hdr.h2[0].f1 = 8w0xa0;
+                hdr.h2[0].f2 = 8w0xa;
+                hdr.h2[0].next_hdr_type = 8w9;
             } else if (op[3:0] == 4w1) {
                 hdr.h2[1].setValid();
-                hdr.h2[1].hdr_type = (bit<8>)8w2;
-                hdr.h2[1].f1 = (bit<8>)8w0xa1;
-                hdr.h2[1].f2 = (bit<8>)8w0x1a;
-                hdr.h2[1].next_hdr_type = (bit<8>)8w9;
+                hdr.h2[1].hdr_type = 8w2;
+                hdr.h2[1].f1 = 8w0xa1;
+                hdr.h2[1].f2 = 8w0x1a;
+                hdr.h2[1].next_hdr_type = 8w9;
             } else if (op[3:0] == 4w2) {
                 hdr.h2[2].setValid();
-                hdr.h2[2].hdr_type = (bit<8>)8w2;
-                hdr.h2[2].f1 = (bit<8>)8w0xa2;
-                hdr.h2[2].f2 = (bit<8>)8w0x2a;
-                hdr.h2[2].next_hdr_type = (bit<8>)8w9;
+                hdr.h2[2].hdr_type = 8w2;
+                hdr.h2[2].f1 = 8w0xa2;
+                hdr.h2[2].f2 = 8w0x2a;
+                hdr.h2[2].next_hdr_type = 8w9;
             } else if (op[3:0] == 4w3) {
                 hdr.h2[3].setValid();
-                hdr.h2[3].hdr_type = (bit<8>)8w2;
-                hdr.h2[3].f1 = (bit<8>)8w0xa3;
-                hdr.h2[3].f2 = (bit<8>)8w0x3a;
-                hdr.h2[3].next_hdr_type = (bit<8>)8w9;
+                hdr.h2[3].hdr_type = 8w2;
+                hdr.h2[3].f1 = 8w0xa3;
+                hdr.h2[3].f2 = 8w0x3a;
+                hdr.h2[3].next_hdr_type = 8w9;
             } else if (op[3:0] == 4w4) {
                 hdr.h2[4].setValid();
-                hdr.h2[4].hdr_type = (bit<8>)8w2;
-                hdr.h2[4].f1 = (bit<8>)8w0xa4;
-                hdr.h2[4].f2 = (bit<8>)8w0x4a;
-                hdr.h2[4].next_hdr_type = (bit<8>)8w9;
+                hdr.h2[4].hdr_type = 8w2;
+                hdr.h2[4].f1 = 8w0xa4;
+                hdr.h2[4].f2 = 8w0x4a;
+                hdr.h2[4].next_hdr_type = 8w9;
             }
         } else if (op[7:4] == 4w4) {
             if (op[3:0] == 4w0) {
@@ -137,21 +137,21 @@ control cIngress(inout headers hdr, inou
         do_one_op.apply(hdr, hdr.h1.op1);
         do_one_op.apply(hdr, hdr.h1.op2);
         do_one_op.apply(hdr, hdr.h1.op3);
-        hdr.h1.h2_valid_bits = (bit<8>)8w0;
+        hdr.h1.h2_valid_bits = 8w0;
         if (hdr.h2[0].isValid()) {
-            hdr.h1.h2_valid_bits[0:0] = (bit<1>)1w1;
+            hdr.h1.h2_valid_bits[0:0] = 1w1;
         }
         if (hdr.h2[1].isValid()) {
-            hdr.h1.h2_valid_bits[1:1] = (bit<1>)1w1;
+            hdr.h1.h2_valid_bits[1:1] = 1w1;
         }
         if (hdr.h2[2].isValid()) {
-            hdr.h1.h2_valid_bits[2:2] = (bit<1>)1w1;
+            hdr.h1.h2_valid_bits[2:2] = 1w1;
         }
         if (hdr.h2[3].isValid()) {
-            hdr.h1.h2_valid_bits[3:3] = (bit<1>)1w1;
+            hdr.h1.h2_valid_bits[3:3] = 1w1;
         }
         if (hdr.h2[4].isValid()) {
-            hdr.h1.h2_valid_bits[4:4] = (bit<1>)1w1;
+            hdr.h1.h2_valid_bits[4:4] = 1w1;
         }
     }
 }
