--- before_pass
+++ after_pass
@@ -15,29 +15,29 @@ parser prs(packet_in p, out Headers_t he
     }
 }
 control pipe(inout Headers_t headers, out bool pass) {
-    @name(".NoAction") action NoAction_1() {
+    @name(".NoAction") action NoAction_0() {
     }
-    @name("match") action match_0(bool act) {
+    @name("match") action match(bool act) {
         pass = act;
     }
-    @name("tbl") table tbl {
+    @name("tbl") table tbl_0 {
         key = {
             headers.ethernet.protocol: exact @name("headers.ethernet.protocol") ;
         }
         actions = {
-            match_0();
-            NoAction_1();
+            match();
+            NoAction_0();
         }
         const entries = {
-                        16w0x800 : match_0(true);
-                        16w0xd000 : match_0(false);
+                        16w0x800 : match(true);
+                        16w0xd000 : match(false);
         }
         implementation = hash_table(32w64);
-        default_action = NoAction_1();
+        default_action = NoAction_0();
     }
     apply {
         pass = true;
-        tbl.apply();
+        tbl_0.apply();
     }
 }
 ebpfFilter<Headers_t>(prs(), pipe()) main;
