--- before_pass
+++ after_pass
@@ -19,24 +19,18 @@ struct Meta {
 }
 parser p(packet_in b, out Headers h, inout Meta m, inout standard_metadata_t sm) {
     state start {
-        {
-            b.extract<Hdr1>(h.h1);
-        }
+        b.extract<Hdr1>(h.h1);
         transition select(h.h1.a) {
             8w0: getH1;
             default: getH2;
         }
     }
     state getH1 {
-        {
-            b.extract<Hdr1>(h.u.h1);
-        }
+        b.extract<Hdr1>(h.u.h1);
         transition accept;
     }
     state getH2 {
-        {
-            b.extract<Hdr2>(h.u.h2);
-        }
+        b.extract<Hdr2>(h.u.h2);
         transition accept;
     }
 }
@@ -54,35 +48,19 @@ control egress(inout Headers h, inout Me
 }
 control deparser(packet_out b, in Headers h) {
     apply {
-        {
-            b.emit<Hdr1>(h.h1);
-        }
-        {
-            b.emit<U>(h.u);
-        }
-        {
-            b.emit<Hdr2>(h.h2);
-        }
+        b.emit<Hdr1>(h.h1);
+        b.emit<U>(h.u);
+        b.emit<Hdr2>(h.h2);
     }
 }
 control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
     apply {
         if (h.u.h2.isValid()) {
-            {
-                h.h2.setValid();
-            }
-            {
-                h.h2.b = h.u.h2.b;
-            }
-            {
-                h.u.h1.setValid();
-            }
-            {
-                h.u.h1.a = h.u.h2.b[7:0];
-            }
-            {
-                h.u.h2.setInvalid();
-            }
+            h.h2.setValid();
+            h.h2.b = h.u.h2.b;
+            h.u.h1.setValid();
+            h.u.h1.a = h.u.h2.b[7:0];
+            h.u.h2.setInvalid();
         }
     }
 }
