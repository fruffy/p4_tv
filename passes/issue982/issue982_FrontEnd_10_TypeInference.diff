--- before_pass
+++ after_pass
@@ -21,7 +21,7 @@ typedef bit<14> PacketLength_t;
 typedef bit<16> EgressInstance_t;
 typedef bit<48> Timestamp_t;
 typedef error ParserError_t;
-const PortId_t PORT_CPU = 255;
+const PortId_t PORT_CPU = (bit<10>)10w255;
 enum InstanceType_t {
     NORMAL,
     CLONE,
@@ -86,7 +86,7 @@ match_kind {
 }
 action send_to_port(inout psa_ingress_output_metadata_t meta, in PortId_t egress_port) {
     meta.drop = false;
-    meta.multicast_group = 0;
+    meta.multicast_group = (bit<10>)10w0;
     meta.egress_port = egress_port;
 }
 action multicast(inout psa_ingress_output_metadata_t meta, in MulticastGroup_t multicast_group) {
@@ -250,7 +250,7 @@ parser CommonParser(packet_in buffer, ou
     state parse_ethernet {
         buffer.extract(parsed_hdr.ethernet);
         transition select(parsed_hdr.ethernet.etherType) {
-            0x800: parse_ipv4;
+            16w0x800: parse_ipv4;
             default: accept;
         }
     }
@@ -262,8 +262,8 @@ parser CommonParser(packet_in buffer, ou
 parser CloneParser(in psa_egress_parser_input_metadata_t istd, inout metadata user_meta) {
     state start {
         transition select(istd.clone_metadata.type) {
-            0: parse_clone_header_0;
-            1: parse_clone_header_1;
+            3w0: parse_clone_header_0;
+            3w1: parse_clone_header_1;
             default: reject;
         }
     }
