--- before_pass
+++ after_pass
@@ -14,7 +14,9 @@ struct Meta_t {
 }
 parser p(packet_in b, out Header_t h, inout Meta_t m, inout standard_metadata_t sm) {
     state start {
-        b.extract<hdr>(h.h);
+        {
+            b.extract<hdr>(h.h);
+        }
         transition accept;
     }
 }
@@ -32,15 +34,21 @@ control egress(inout Header_t h, inout M
 }
 control deparser(packet_out b, in Header_t h) {
     apply {
-        b.emit<hdr>(h.h);
+        {
+            b.emit<hdr>(h.h);
+        }
     }
 }
 control ingress(inout Header_t h, inout Meta_t m, inout standard_metadata_t standard_meta) {
     @name("a") action a_0() {
-        standard_meta.egress_spec = 9w0;
+        {
+            standard_meta.egress_spec = 9w0;
+        }
     }
     @name("a_with_control_params") action a_with_control_params_0(bit<9> x) {
-        standard_meta.egress_spec = x;
+        {
+            standard_meta.egress_spec = x;
+        }
     }
     @name("t_lpm") table t_lpm_0 {
         key = {
@@ -58,7 +66,9 @@ control ingress(inout Header_t h, inout
         }
     }
     apply {
-        t_lpm_0.apply();
+        {
+            t_lpm_0.apply();
+        }
     }
 }
 V1Switch<Header_t, Meta_t>(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
