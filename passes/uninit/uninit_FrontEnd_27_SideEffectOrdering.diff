--- before_pass
+++ after_pass
@@ -11,30 +11,61 @@ parser p1(packet_in p, out Header h) {
     bool b_0;
     bool c_0;
     bool d_0;
+    bit<32> tmp;
+    bit<32> tmp_0;
+    bit<32> tmp_1;
+    bit<32> tmp_2;
     state start {
-        h.data1 = 32w0;
-        func(h);
-        g(h.data2, g(h.data2, h.data2));
-        h.data2 = h.data3 + 32w1;
-        stack_0[0] = stack_0[1];
-        b_0 = stack_0[1].isValid();
+        {
+            h.data1 = 32w0;
+        }
+        {
+            func(h);
+        }
+        {
+            tmp = h.data2;
+            tmp_0 = h.data2;
+            tmp_1 = g(tmp, tmp_0);
+            h.data2 = tmp;
+            tmp_2 = tmp_1;
+            g(h.data2, tmp_2);
+        }
+        {
+            h.data2 = h.data3 + 32w1;
+        }
+        {
+            stack_0[0] = stack_0[1];
+        }
+        {
+            b_0 = stack_0[1].isValid();
+        }
         transition select(h.isValid()) {
             true: next1;
             false: next2;
         }
     }
     state next1 {
-        d_0 = false;
+        {
+            d_0 = false;
+        }
         transition next3;
     }
     state next2 {
-        c_0 = true;
-        d_0 = c_0;
+        {
+            c_0 = true;
+        }
+        {
+            d_0 = c_0;
+        }
         transition next3;
     }
     state next3 {
-        c_0 = !c_0;
-        d_0 = !d_0;
+        {
+            c_0 = !c_0;
+        }
+        {
+            d_0 = !d_0;
+        }
         transition accept;
     }
 }
@@ -46,10 +77,14 @@ control c(out bit<32> v) {
     bit<32> f_0;
     bool touched_0;
     @name("a1") action a1_0() {
-        setByAction_0 = 32w1;
+        {
+            setByAction_0 = 32w1;
+        }
     }
     @name("a2") action a2_0() {
-        setByAction_0 = 32w1;
+        {
+            setByAction_0 = 32w1;
+        }
     }
     @name("t") table t_0 {
         actions = {
@@ -59,28 +94,46 @@ control c(out bit<32> v) {
         default_action = a1_0();
     }
     apply {
-        d_1 = 32w1;
-        b_1 = b_1 + 32w1;
-        d_1 = d_1 + 32w1;
+        {
+            d_1 = 32w1;
+        }
+        {
+            b_1 = b_1 + 32w1;
+        }
+        {
+            d_1 = d_1 + 32w1;
+        }
         if (e_0 > 32w0) {
-            e_0 = 32w1;
-            f_0 = 32w2;
+            {
+                e_0 = 32w1;
+            }
+            {
+                f_0 = 32w2;
+            }
         } else {
             f_0 = 32w3;
         }
-        e_0 = e_0 + 32w1;
+        {
+            e_0 = e_0 + 32w1;
+        }
         switch (t_0.apply().action_run) {
             a1_0: {
-                touched_0 = true;
+                {
+                    touched_0 = true;
+                }
             }
         }
-        touched_0 = !touched_0;
+        {
+            touched_0 = !touched_0;
+        }
         if (e_0 > 32w0) {
             t_0.apply();
         } else {
             a1_0();
         }
-        setByAction_0 = setByAction_0 + 32w1;
+        {
+            setByAction_0 = setByAction_0 + 32w1;
+        }
     }
 }
 parser proto(packet_in p, out Header h);
