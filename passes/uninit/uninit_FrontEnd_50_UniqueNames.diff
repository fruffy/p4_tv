--- before_pass
+++ after_pass
@@ -7,36 +7,36 @@ header Header {
 extern void func(in Header h);
 extern bit<32> g(inout bit<32> v, in bit<32> w);
 parser p1(packet_in p, out Header h) {
-    Header[2] stack;
-    bool c_1;
-    bool d;
-    bit<32> tmp_3;
-    bit<32> tmp_4;
-    bit<32> tmp_5;
-    bit<32> tmp_6;
+    Header[2] stack_0;
+    bool c_0;
+    bool d_0;
+    bit<32> tmp;
+    bit<32> tmp_0;
+    bit<32> tmp_1;
+    bit<32> tmp_2;
     state start {
         h.data1 = 32w0;
         func(h);
-        tmp_3 = h.data2;
-        tmp_4 = h.data2;
-        tmp_5 = g(tmp_3, tmp_4);
-        h.data2 = tmp_3;
-        tmp_6 = tmp_5;
-        g(h.data2, tmp_6);
+        tmp = h.data2;
+        tmp_0 = h.data2;
+        tmp_1 = g(tmp, tmp_0);
+        h.data2 = tmp;
+        tmp_2 = tmp_1;
+        g(h.data2, tmp_2);
         h.data2 = h.data3 + 32w1;
-        stack[1].isValid();
+        stack_0[1].isValid();
         transition select(h.isValid()) {
             true: next1;
             false: next2;
         }
     }
     state next1 {
-        d = false;
+        d_0 = false;
         transition next3;
     }
     state next2 {
-        c_1 = true;
-        d = c_1;
+        c_0 = true;
+        d_0 = c_0;
         transition next3;
     }
     state next3 {
@@ -44,43 +44,43 @@ parser p1(packet_in p, out Header h) {
     }
 }
 control c(out bit<32> v) {
-    bit<32> d_2;
-    bit<32> setByAction;
-    bit<32> e;
-    bool touched;
-    @name("a1") action a1_0() {
-        setByAction = 32w1;
+    bit<32> d_1;
+    bit<32> setByAction_0;
+    bit<32> e_0;
+    bool touched_0;
+    @name("a1") action a1() {
+        setByAction_0 = 32w1;
     }
-    @name("a1") action a1_1() {
-        setByAction = 32w1;
+    @name("a1") action a1_2() {
+        setByAction_0 = 32w1;
     }
-    @name("a2") action a2_0() {
-        setByAction = 32w1;
+    @name("a2") action a2() {
+        setByAction_0 = 32w1;
     }
-    @name("t") table t {
+    @name("t") table t_0 {
         actions = {
-            a1_0();
-            a2_0();
+            a1();
+            a2();
         }
-        default_action = a1_0();
+        default_action = a1();
     }
     apply {
-        d_2 = 32w1;
-        if (e > 32w0) {
-            e = 32w1;
+        d_1 = 32w1;
+        if (e_0 > 32w0) {
+            e_0 = 32w1;
         } else {
             ;
         }
-        e = e + 32w1;
-        switch (t.apply().action_run) {
-            a1_0: {
-                touched = true;
+        e_0 = e_0 + 32w1;
+        switch (t_0.apply().action_run) {
+            a1: {
+                touched_0 = true;
             }
         }
-        if (e > 32w0) {
-            t.apply();
+        if (e_0 > 32w0) {
+            t_0.apply();
         } else {
-            a1_1();
+            a1_2();
         }
     }
 }
