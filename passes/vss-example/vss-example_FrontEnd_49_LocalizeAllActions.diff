--- before_pass
+++ after_pass
@@ -71,11 +71,22 @@ parser TopParser(packet_in b, out Parsed
     }
 }
 control TopPipe(inout Parsed_packet headers, in error parseError, in InControl inCtrl, out OutControl outCtrl) {
+    @name(".NoAction") action NoAction_1() {
+    }
     IPv4Address nextHop;
-    @name("Drop_action") action Drop_action() {
+    @name("Drop_action") action Drop_action_0() {
+        outCtrl.outputPort = 4w0xf;
+    }
+    @name("Drop_action") action Drop_action_1() {
+        outCtrl.outputPort = 4w0xf;
+    }
+    @name("Drop_action") action Drop_action_2() {
+        outCtrl.outputPort = 4w0xf;
+    }
+    @name("Drop_action") action Drop_action_3() {
         outCtrl.outputPort = 4w0xf;
     }
-    @name("Set_nhop") action Set_nhop(IPv4Address ipv4_dest, PortId port) {
+    @name("Set_nhop") action Set_nhop_0(IPv4Address ipv4_dest, PortId port) {
         nextHop = ipv4_dest;
         headers.ip.ttl = headers.ip.ttl + 8w255;
         outCtrl.outputPort = port;
@@ -85,13 +96,13 @@ control TopPipe(inout Parsed_packet head
             headers.ip.dstAddr: lpm @name("headers.ip.dstAddr") ;
         }
         actions = {
-            Drop_action();
-            Set_nhop();
+            Drop_action_0();
+            Set_nhop_0();
         }
         size = 1024;
-        default_action = Drop_action();
+        default_action = Drop_action_0();
     }
-    @name("Send_to_cpu") action Send_to_cpu() {
+    @name("Send_to_cpu") action Send_to_cpu_0() {
         outCtrl.outputPort = 4w0xe;
     }
     @name("check_ttl") table check_ttl {
@@ -99,12 +110,12 @@ control TopPipe(inout Parsed_packet head
             headers.ip.ttl: exact @name("headers.ip.ttl") ;
         }
         actions = {
-            Send_to_cpu();
-            NoAction();
+            Send_to_cpu_0();
+            NoAction_1();
         }
-        const default_action = NoAction();
+        const default_action = NoAction_1();
     }
-    @name("Set_dmac") action Set_dmac(EthernetAddress dmac) {
+    @name("Set_dmac") action Set_dmac_0(EthernetAddress dmac) {
         headers.ethernet.dstAddr = dmac;
     }
     @name("dmac") table dmac_1 {
@@ -112,13 +123,13 @@ control TopPipe(inout Parsed_packet head
             nextHop: exact @name("nextHop") ;
         }
         actions = {
-            Drop_action();
-            Set_dmac();
+            Drop_action_1();
+            Set_dmac_0();
         }
         size = 1024;
-        default_action = Drop_action();
+        default_action = Drop_action_1();
     }
-    @name("Set_smac") action Set_smac(EthernetAddress smac) {
+    @name("Set_smac") action Set_smac_0(EthernetAddress smac) {
         headers.ethernet.srcAddr = smac;
     }
     @name("smac") table smac_1 {
@@ -126,16 +137,16 @@ control TopPipe(inout Parsed_packet head
             outCtrl.outputPort: exact @name("outCtrl.outputPort") ;
         }
         actions = {
-            Drop_action();
-            Set_smac();
+            Drop_action_2();
+            Set_smac_0();
         }
         size = 16;
-        default_action = Drop_action();
+        default_action = Drop_action_2();
     }
     apply {
         bool hasReturned_0 = false;
         if (parseError != error.NoError) {
-            Drop_action();
+            Drop_action_3();
             hasReturned_0 = true;
         }
         if (!hasReturned_0) {
