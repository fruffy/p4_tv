--- before_pass
+++ after_pass
@@ -31,14 +31,18 @@ struct headers {
 }
 parser ParserImpl(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     state start {
-        packet.extract<ethernet_t>(hdr.ethernet);
+        {
+            packet.extract<ethernet_t>(hdr.ethernet);
+        }
         transition select(hdr.ethernet.etherType) {
             16w0x800: parse_ipv4;
             default: reject;
         }
     }
     state parse_ipv4 {
-        packet.extract<ipv4_t>(hdr.ipv4);
+        {
+            packet.extract<ipv4_t>(hdr.ipv4);
+        }
         transition accept;
     }
 }
@@ -48,10 +52,14 @@ control verifyChecksum(inout headers hdr
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     @name("drop") action drop_0() {
-        mark_to_drop(standard_metadata);
+        {
+            mark_to_drop(standard_metadata);
+        }
     }
     @name("ipv4_forward") action ipv4_forward_0(macAddr_t dstAddr, egressSpec_t port) {
-        meta.test_bool = true;
+        {
+            meta.test_bool = true;
+        }
     }
     @name("ipv4_lpm") table ipv4_lpm_0 {
         key = {
@@ -66,7 +74,9 @@ control ingress(inout headers hdr, inout
         default_action = NoAction();
     }
     apply {
-        meta.test_bool = false;
+        {
+            meta.test_bool = false;
+        }
         if (hdr.ipv4.isValid()) {
             ipv4_lpm_0.apply();
         }
@@ -85,7 +95,9 @@ control computeChecksum(inout headers hd
 }
 control DeparserImpl(packet_out packet, in headers hdr) {
     apply {
-        packet.emit<headers>(hdr);
+        {
+            packet.emit<headers>(hdr);
+        }
     }
 }
 V1Switch<headers, metadata>(ParserImpl(), verifyChecksum(), ingress(), egress(), computeChecksum(), DeparserImpl()) main;
