--- before_pass
+++ after_pass
@@ -128,30 +128,37 @@ struct parsed_headers_t {
 }
 struct fabric_metadata_t {
 }
-action drop() {
-    mark_to_drop();
-}
-action nop() {
-}
 parser FabricParser(packet_in packet, out parsed_headers_t hdr, inout fabric_metadata_t meta, inout standard_metadata_t standard_metadata) {
     state start {
         transition accept;
     }
 }
 control FabricIngress(inout parsed_headers_t hdr, inout fabric_metadata_t fabric_metadata, inout standard_metadata_t standard_metadata) {
+    @name(".drop") action drop_1() {
+        mark_to_drop();
+    }
+    @name(".drop") action drop_2() {
+        mark_to_drop();
+    }
+    @name(".nop") action nop_1() {
+    }
+    @name(".NoAction") action NoAction_1() {
+    }
+    @name(".NoAction") action NoAction_2() {
+    }
     @name("filtering.t") table filtering_t_0 {
         key = {
             standard_metadata.ingress_port: exact @name("standard_metadata.ingress_port") ;
         }
         actions = {
-            drop();
-            nop();
-            @defaultonly NoAction();
+            drop_1();
+            nop_1();
+            @defaultonly NoAction_1();
         }
-        default_action = NoAction();
+        default_action = NoAction_1();
     }
     PortId_t forwarding_mask_0;
-    @name("forwarding.fwd") action forwarding_fwd_0(PortId_t next_port) {
+    @name("forwarding.fwd") action forwarding_fwd(PortId_t next_port) {
         standard_metadata.egress_spec = next_port;
     }
     @name("forwarding.t") table forwarding_t_0 {
@@ -159,11 +166,11 @@ control FabricIngress(inout parsed_heade
             hdr.ipv4.dstAddr: exact @name("hdr.ipv4.dstAddr") ;
         }
         actions = {
-            drop();
-            forwarding_fwd_0();
-            @defaultonly NoAction();
+            drop_2();
+            forwarding_fwd();
+            @defaultonly NoAction_2();
         }
-        default_action = NoAction();
+        default_action = NoAction_2();
     }
     apply {
         if (hdr.packet_out.isValid()) {
