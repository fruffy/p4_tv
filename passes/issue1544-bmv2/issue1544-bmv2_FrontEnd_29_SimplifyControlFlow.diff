--- before_pass
+++ after_pass
@@ -18,23 +18,17 @@ struct headers {
     ethernet_t ethernet;
 }
 action my_drop(inout standard_metadata_t smeta) {
-    {
-        mark_to_drop(smeta);
-    }
+    mark_to_drop(smeta);
 }
 parser ParserImpl(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     state start {
-        {
-            packet.extract<ethernet_t>(hdr.ethernet);
-        }
+        packet.extract<ethernet_t>(hdr.ethernet);
         transition accept;
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     @name("set_port") action set_port_0(bit<9> output_port) {
-        {
-            standard_metadata.egress_spec = output_port;
-        }
+        standard_metadata.egress_spec = output_port;
     }
     @name("mac_da") table mac_da_0 {
         key = {
@@ -48,13 +42,9 @@ control ingress(inout headers hdr, inout
     }
     bit<16> tmp;
     apply {
-        {
-            mac_da_0.apply();
-        }
-        {
-            tmp = sometimes_dec(hdr.ethernet.srcAddr[15:0]);
-            hdr.ethernet.srcAddr[15:0] = tmp;
-        }
+        mac_da_0.apply();
+        tmp = sometimes_dec(hdr.ethernet.srcAddr[15:0]);
+        hdr.ethernet.srcAddr[15:0] = tmp;
     }
 }
 control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
@@ -63,9 +53,7 @@ control egress(inout headers hdr, inout
 }
 control DeparserImpl(packet_out packet, in headers hdr) {
     apply {
-        {
-            packet.emit<ethernet_t>(hdr.ethernet);
-        }
+        packet.emit<ethernet_t>(hdr.ethernet);
     }
 }
 control verifyChecksum(inout headers hdr, inout metadata meta) {
