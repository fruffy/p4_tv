--- before_pass
+++ after_pass
@@ -20,36 +20,36 @@ parser ParserImpl(packet_in packet, out
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    bit<16> tmp;
-    @name("set_port") action set_port_0(bit<9> output_port) {
+    bit<16> tmp_0;
+    @name("set_port") action set_port(bit<9> output_port) {
         standard_metadata.egress_spec = output_port;
     }
-    @name("mac_da") table mac_da_0 {
+    @name("mac_da") table mac_da {
         key = {
             hdr.ethernet.dstAddr: exact @name("hdr.ethernet.dstAddr") ;
         }
         actions = {
-            set_port_0();
+            set_port();
             my_drop(standard_metadata);
         }
         default_action = my_drop(standard_metadata);
     }
     apply {
-        mac_da_0.apply();
+        mac_da.apply();
         {
-            bit<16> x_0 = hdr.ethernet.srcAddr[15:0];
-            bool hasReturned = false;
-            bit<16> retval;
-            if (x_0 > 16w5) {
-                hasReturned = true;
-                retval = x_0 + 16w65535;
+            bit<16> x = hdr.ethernet.srcAddr[15:0];
+            bool hasReturned_0 = false;
+            bit<16> retval_0;
+            if (x > 16w5) {
+                hasReturned_0 = true;
+                retval_0 = x + 16w65535;
             } else {
-                hasReturned = true;
-                retval = x_0;
+                hasReturned_0 = true;
+                retval_0 = x;
             }
-            tmp = retval;
+            tmp_0 = retval_0;
         }
-        hdr.ethernet.srcAddr[15:0] = tmp;
+        hdr.ethernet.srcAddr[15:0] = tmp_0;
     }
 }
 control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
