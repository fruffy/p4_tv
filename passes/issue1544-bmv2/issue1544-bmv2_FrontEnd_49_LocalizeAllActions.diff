--- before_pass
+++ after_pass
@@ -10,9 +10,6 @@ header ethernet_t {
 struct headers {
     ethernet_t ethernet;
 }
-action my_drop(inout standard_metadata_t smeta_0) {
-    mark_to_drop(smeta_0);
-}
 parser ParserImpl(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     state start {
         packet.extract<ethernet_t>(hdr.ethernet);
@@ -20,8 +17,11 @@ parser ParserImpl(packet_in packet, out
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
+    @name(".my_drop") action my_drop_1(inout standard_metadata_t smeta_0) {
+        mark_to_drop(smeta_0);
+    }
     bit<16> tmp_0;
-    @name("set_port") action set_port(bit<9> output_port) {
+    @name("set_port") action set_port_0(bit<9> output_port) {
         standard_metadata.egress_spec = output_port;
     }
     @name("mac_da") table mac_da {
@@ -29,10 +29,10 @@ control ingress(inout headers hdr, inout
             hdr.ethernet.dstAddr: exact @name("hdr.ethernet.dstAddr") ;
         }
         actions = {
-            set_port();
-            my_drop(standard_metadata);
+            set_port_0();
+            my_drop_1(standard_metadata);
         }
-        default_action = my_drop(standard_metadata);
+        default_action = my_drop_1(standard_metadata);
     }
     apply {
         mac_da.apply();
