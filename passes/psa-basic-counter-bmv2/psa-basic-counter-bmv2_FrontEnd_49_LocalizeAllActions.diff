--- before_pass
+++ after_pass
@@ -20,18 +20,23 @@ parser IngressParserImpl(packet_in pkt,
     }
 }
 control cIngress(inout headers_t hdr, inout metadata_t user_meta, in psa_ingress_input_metadata_t istd, inout psa_ingress_output_metadata_t ostd) {
+    @name(".send_to_port") action send_to_port_1(inout psa_ingress_output_metadata_t meta_0, in PortId_t egress_port_0) {
+        meta_0.drop = false;
+        meta_0.multicast_group = (MulticastGroup_t)32w0;
+        meta_0.egress_port = egress_port_0;
+    }
     @name("counter") Counter<bit<10>, bit<12>>(32w1024, PSA_CounterType_t.PACKETS) counter;
-    @name("execute") action execute_1() {
+    @name("execute") action execute_0() {
         counter.count(12w256);
     }
     @name("tbl") table tbl {
         actions = {
-            execute_1();
+            execute_0();
         }
-        default_action = execute_1();
+        default_action = execute_0();
     }
     apply {
-        send_to_port(ostd, (PortId_t)(PortIdUint_t)hdr.ethernet.dstAddr);
+        send_to_port_1(ostd, (PortId_t)(PortIdUint_t)hdr.ethernet.dstAddr);
         tbl.apply();
     }
 }
