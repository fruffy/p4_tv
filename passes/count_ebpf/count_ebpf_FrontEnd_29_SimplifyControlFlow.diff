--- before_pass
+++ after_pass
@@ -27,18 +27,14 @@ struct Headers_t {
 }
 parser prs(packet_in p, out Headers_t headers) {
     state start {
-        {
-            p.extract<Ethernet_h>(headers.ethernet);
-        }
+        p.extract<Ethernet_h>(headers.ethernet);
         transition select(headers.ethernet.etherType) {
             16w0x800: ip;
             default: reject;
         }
     }
     state ip {
-        {
-            p.extract<IPv4_h>(headers.ipv4);
-        }
+        p.extract<IPv4_h>(headers.ipv4);
         transition accept;
     }
 }
@@ -46,12 +42,8 @@ control pipe(inout Headers_t headers, ou
     @name("counters") CounterArray(32w10, true) counters_0;
     apply {
         if (headers.ipv4.isValid()) {
-            {
-                counters_0.increment(headers.ipv4.dstAddr);
-            }
-            {
-                pass = true;
-            }
+            counters_0.increment(headers.ipv4.dstAddr);
+            pass = true;
         } else {
             pass = false;
         }
