--- before_pass
+++ after_pass
@@ -40,42 +40,42 @@ control update(inout packet_t h, inout M
     }
 }
 control ingress(inout packet_t hdrs, inout Meta m, inout standard_metadata_t meta) {
-    @name("setb1") action setb1(bit<9> port, bit<8> val) {
+    @name("ingress.setb1") action setb1(bit<9> port, bit<8> val) {
         hdrs.data.b1 = val;
         meta.egress_spec = port;
     }
-    @name("noop") action noop() {
+    @name("ingress.noop") action noop() {
     }
-    @name("noop") action noop_5() {
+    @name("ingress.noop") action noop_5() {
     }
-    @name("noop") action noop_6() {
+    @name("ingress.noop") action noop_6() {
     }
-    @name("noop") action noop_7() {
+    @name("ingress.noop") action noop_7() {
     }
-    @name("noop") action noop_8() {
+    @name("ingress.noop") action noop_8() {
     }
-    @name("setbyte") action setbyte(out bit<8> reg, bit<8> val) {
+    @name("ingress.setbyte") action setbyte(out bit<8> reg, bit<8> val) {
         reg = val;
     }
-    @name("setbyte") action setbyte_4(out bit<8> reg_1, bit<8> val) {
+    @name("ingress.setbyte") action setbyte_4(out bit<8> reg_1, bit<8> val) {
         reg_1 = val;
     }
-    @name("setbyte") action setbyte_5(out bit<8> reg_2, bit<8> val) {
+    @name("ingress.setbyte") action setbyte_5(out bit<8> reg_2, bit<8> val) {
         reg_2 = val;
     }
-    @name("setbyte") action setbyte_6(out bit<8> reg_3, bit<8> val) {
+    @name("ingress.setbyte") action setbyte_6(out bit<8> reg_3, bit<8> val) {
         reg_3 = val;
     }
-    @name("act1") action act1(bit<8> val) {
+    @name("ingress.act1") action act1(bit<8> val) {
         hdrs.extra[0].b1 = val;
     }
-    @name("act2") action act2(bit<8> val) {
+    @name("ingress.act2") action act2(bit<8> val) {
         hdrs.extra[0].b1 = val;
     }
-    @name("act3") action act3(bit<8> val) {
+    @name("ingress.act3") action act3(bit<8> val) {
         hdrs.extra[0].b1 = val;
     }
-    @name("test1") table test1_0 {
+    @name("ingress.test1") table test1_0 {
         key = {
             hdrs.data.f1: ternary @name("hdrs.data.f1") ;
         }
@@ -85,7 +85,7 @@ control ingress(inout packet_t hdrs, ino
         }
         default_action = noop();
     }
-    @name("ex1") table ex1_0 {
+    @name("ingress.ex1") table ex1_0 {
         key = {
             hdrs.extra[0].h: ternary @name("hdrs.extra[0].h") ;
         }
@@ -98,7 +98,7 @@ control ingress(inout packet_t hdrs, ino
         }
         default_action = noop_5();
     }
-    @name("tbl1") table tbl1_0 {
+    @name("ingress.tbl1") table tbl1_0 {
         key = {
             hdrs.data.f2: ternary @name("hdrs.data.f2") ;
         }
@@ -108,7 +108,7 @@ control ingress(inout packet_t hdrs, ino
         }
         default_action = noop_6();
     }
-    @name("tbl2") table tbl2_0 {
+    @name("ingress.tbl2") table tbl2_0 {
         key = {
             hdrs.data.f2: ternary @name("hdrs.data.f2") ;
         }
@@ -118,7 +118,7 @@ control ingress(inout packet_t hdrs, ino
         }
         default_action = noop_7();
     }
-    @name("tbl3") table tbl3_0 {
+    @name("ingress.tbl3") table tbl3_0 {
         key = {
             hdrs.data.f2: ternary @name("hdrs.data.f2") ;
         }
