--- before_pass
+++ after_pass
@@ -20,15 +20,11 @@ struct Meta {
 }
 parser p(packet_in b, out packet_t hdrs, inout Meta m, inout standard_metadata_t meta) {
     state start {
-        {
-            b.extract<data_h>(hdrs.data);
-        }
+        b.extract<data_h>(hdrs.data);
         transition extra;
     }
     state extra {
-        {
-            b.extract<extra_h>(hdrs.extra.next);
-        }
+        b.extract<extra_h>(hdrs.extra.next);
         transition select(hdrs.extra.last.b2) {
             8w0x80 &&& 8w0x80: extra;
             default: accept;
@@ -45,34 +41,22 @@ control update(inout packet_t h, inout M
 }
 control ingress(inout packet_t hdrs, inout Meta m, inout standard_metadata_t meta) {
     @name("setb1") action setb1_0(bit<9> port, bit<8> val) {
-        {
-            hdrs.data.b1 = val;
-        }
-        {
-            meta.egress_spec = port;
-        }
+        hdrs.data.b1 = val;
+        meta.egress_spec = port;
     }
     @name("noop") action noop_0() {
     }
     @name("setbyte") action setbyte_0(out bit<8> reg, bit<8> val) {
-        {
-            reg = val;
-        }
+        reg = val;
     }
     @name("act1") action act1_0(bit<8> val) {
-        {
-            hdrs.extra[0].b1 = val;
-        }
+        hdrs.extra[0].b1 = val;
     }
     @name("act2") action act2_0(bit<8> val) {
-        {
-            hdrs.extra[0].b1 = val;
-        }
+        hdrs.extra[0].b1 = val;
     }
     @name("act3") action act3_0(bit<8> val) {
-        {
-            hdrs.extra[0].b1 = val;
-        }
+        hdrs.extra[0].b1 = val;
     }
     @name("test1") table test1_0 {
         key = {
@@ -128,24 +112,16 @@ control ingress(inout packet_t hdrs, ino
         default_action = noop_0();
     }
     apply {
-        {
-            test1_0.apply();
-        }
+        test1_0.apply();
         switch (ex1_0.apply().action_run) {
             act1_0: {
-                {
-                    tbl1_0.apply();
-                }
+                tbl1_0.apply();
             }
             act2_0: {
-                {
-                    tbl2_0.apply();
-                }
+                tbl2_0.apply();
             }
             act3_0: {
-                {
-                    tbl3_0.apply();
-                }
+                tbl3_0.apply();
             }
         }
     }
@@ -156,12 +132,8 @@ control egress(inout packet_t hdrs, inou
 }
 control deparser(packet_out b, in packet_t hdrs) {
     apply {
-        {
-            b.emit<data_h>(hdrs.data);
-        }
-        {
-            b.emit<extra_h[4]>(hdrs.extra);
-        }
+        b.emit<data_h>(hdrs.data);
+        b.emit<extra_h[4]>(hdrs.extra);
     }
 }
 V1Switch<packet_t, Meta>(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
