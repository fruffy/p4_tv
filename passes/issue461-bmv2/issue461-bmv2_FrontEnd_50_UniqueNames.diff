--- before_pass
+++ after_pass
@@ -44,69 +44,69 @@ parser ParserImpl(packet_in packet, out
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name(".my_drop") action my_drop_2(inout standard_metadata_t smeta_0) {
+    @name(".my_drop") action my_drop(inout standard_metadata_t smeta_0) {
         mark_to_drop(smeta_0);
     }
-    @name("ipv4_da_lpm_stats") direct_counter(CounterType.packets) ipv4_da_lpm_stats;
-    @name("set_l2ptr") action set_l2ptr_0(bit<32> l2ptr) {
-        ipv4_da_lpm_stats.count();
+    @name("ipv4_da_lpm_stats") direct_counter(CounterType.packets) ipv4_da_lpm_stats_0;
+    @name("set_l2ptr") action set_l2ptr(bit<32> l2ptr) {
+        ipv4_da_lpm_stats_0.count();
         meta.fwd_metadata.l2ptr = l2ptr;
     }
-    @name("drop_with_count") action drop_with_count_0() {
-        ipv4_da_lpm_stats.count();
+    @name("drop_with_count") action drop_with_count() {
+        ipv4_da_lpm_stats_0.count();
         mark_to_drop(standard_metadata);
     }
-    @name("set_bd_dmac_intf") action set_bd_dmac_intf_0(bit<24> bd, bit<48> dmac, bit<9> intf) {
+    @name("set_bd_dmac_intf") action set_bd_dmac_intf(bit<24> bd, bit<48> dmac, bit<9> intf) {
         meta.fwd_metadata.out_bd = bd;
         hdr.ethernet.dstAddr = dmac;
         standard_metadata.egress_spec = intf;
         hdr.ipv4.ttl = hdr.ipv4.ttl + 8w255;
     }
-    @name("ipv4_da_lpm") table ipv4_da_lpm {
+    @name("ipv4_da_lpm") table ipv4_da_lpm_0 {
         actions = {
-            set_l2ptr_0();
-            drop_with_count_0();
+            set_l2ptr();
+            drop_with_count();
         }
         key = {
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
-        default_action = drop_with_count_0();
-        counters = ipv4_da_lpm_stats;
+        default_action = drop_with_count();
+        counters = ipv4_da_lpm_stats_0;
     }
-    @name("mac_da") table mac_da {
+    @name("mac_da") table mac_da_0 {
         actions = {
-            set_bd_dmac_intf_0();
-            my_drop_2(standard_metadata);
+            set_bd_dmac_intf();
+            my_drop(standard_metadata);
         }
         key = {
             meta.fwd_metadata.l2ptr: exact @name("meta.fwd_metadata.l2ptr") ;
         }
-        default_action = my_drop_2(standard_metadata);
+        default_action = my_drop(standard_metadata);
     }
     apply {
-        ipv4_da_lpm.apply();
-        mac_da.apply();
+        ipv4_da_lpm_0.apply();
+        mac_da_0.apply();
     }
 }
 control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
-    @name(".my_drop") action my_drop_3(inout standard_metadata_t smeta_0) {
+    @name(".my_drop") action my_drop_0(inout standard_metadata_t smeta_0) {
         mark_to_drop(smeta_0);
     }
-    @name("rewrite_mac") action rewrite_mac_0(bit<48> smac) {
+    @name("rewrite_mac") action rewrite_mac(bit<48> smac) {
         hdr.ethernet.srcAddr = smac;
     }
-    @name("send_frame") table send_frame {
+    @name("send_frame") table send_frame_0 {
         actions = {
-            rewrite_mac_0();
-            my_drop_3(standard_metadata);
+            rewrite_mac();
+            my_drop_0(standard_metadata);
         }
         key = {
             meta.fwd_metadata.out_bd: exact @name("meta.fwd_metadata.out_bd") ;
         }
-        default_action = my_drop_3(standard_metadata);
+        default_action = my_drop_0(standard_metadata);
     }
     apply {
-        send_frame.apply();
+        send_frame_0.apply();
     }
 }
 control DeparserImpl(packet_out packet, in headers hdr) {
