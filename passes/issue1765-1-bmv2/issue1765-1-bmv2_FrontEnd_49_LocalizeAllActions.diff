--- before_pass
+++ after_pass
@@ -161,22 +161,41 @@ control MyComputeChecksum(inout headers
     }
 }
 control MyIngress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
+    @name(".NoAction") action NoAction_1() {
+    }
+    @name(".NoAction") action NoAction_2() {
+    }
+    @name(".NoAction") action NoAction_3() {
+    }
     mac_addr_t mac_tmp;
     ipv6_addr_t addr_tmp;
-    @name("set_egress_port") action set_egress_port(port_t out_port) {
+    @name("set_egress_port") action set_egress_port_0(port_t out_port) {
         standard_metadata.egress_spec = out_port;
     }
-    @name("controller_debug") action controller_debug() {
+    @name("set_egress_port") action set_egress_port_1(port_t out_port) {
+        standard_metadata.egress_spec = out_port;
+    }
+    @name("controller_debug") action controller_debug_0() {
         meta.task = 16w3;
         meta.ingress_port = standard_metadata.ingress_port;
         clone3<metadata>(CloneType.I2E, 32w100, meta);
     }
-    @name("controller_reply") action controller_reply(task_t task) {
+    @name("controller_debug") action controller_debug_1() {
+        meta.task = 16w3;
+        meta.ingress_port = standard_metadata.ingress_port;
+        clone3<metadata>(CloneType.I2E, 32w100, meta);
+    }
+    @name("controller_reply") action controller_reply_0(task_t task) {
+        meta.task = task;
+        meta.ingress_port = standard_metadata.ingress_port;
+        clone3<metadata>(CloneType.I2E, 32w100, meta);
+    }
+    @name("controller_reply") action controller_reply_1(task_t task) {
         meta.task = task;
         meta.ingress_port = standard_metadata.ingress_port;
         clone3<metadata>(CloneType.I2E, 32w100, meta);
     }
-    @name("icmp6_echo_reply") action icmp6_echo_reply() {
+    @name("icmp6_echo_reply") action icmp6_echo_reply_0() {
         mac_tmp = hdr.ethernet.dst_addr;
         hdr.ethernet.dst_addr = hdr.ethernet.src_addr;
         hdr.ethernet.src_addr = mac_tmp;
@@ -191,37 +210,37 @@ control MyIngress(inout headers hdr, ino
             hdr.ipv6.dst_addr: exact @name("hdr.ipv6.dst_addr") ;
         }
         actions = {
-            controller_debug();
-            controller_reply();
-            icmp6_echo_reply();
-            NoAction();
+            controller_debug_0();
+            controller_reply_0();
+            icmp6_echo_reply_0();
+            NoAction_1();
         }
         size = 64;
-        default_action = NoAction();
+        default_action = NoAction_1();
     }
     @name("v6_networks") table v6_networks {
         key = {
             hdr.ipv6.dst_addr: lpm @name("hdr.ipv6.dst_addr") ;
         }
         actions = {
-            set_egress_port();
-            controller_debug();
-            controller_reply();
-            NoAction();
+            set_egress_port_0();
+            controller_debug_1();
+            controller_reply_1();
+            NoAction_2();
         }
         size = 64;
-        default_action = NoAction();
+        default_action = NoAction_2();
     }
     @name("v4_networks") table v4_networks {
         key = {
             hdr.ipv4.dst_addr: lpm @name("hdr.ipv4.dst_addr") ;
         }
         actions = {
-            set_egress_port();
-            NoAction();
+            set_egress_port_1();
+            NoAction_3();
         }
         size = 64;
-        default_action = NoAction();
+        default_action = NoAction_3();
     }
     apply {
         if (hdr.ipv6.isValid()) {
