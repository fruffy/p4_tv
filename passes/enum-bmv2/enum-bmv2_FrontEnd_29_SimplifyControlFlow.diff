--- before_pass
+++ after_pass
@@ -12,9 +12,7 @@ enum Choice {
 control compute(inout hdr h) {
     Choice c_0;
     apply {
-        {
-            c_0 = Choice.First;
-        }
+        c_0 = Choice.First;
         if (c_0 == Choice.Second) {
             h.c = h.a;
         } else {
@@ -29,9 +27,7 @@ struct Meta {
 }
 parser p(packet_in b, out Headers h, inout Meta m, inout standard_metadata_t sm) {
     state start {
-        {
-            b.extract<hdr>(h.h);
-        }
+        b.extract<hdr>(h.h);
         transition accept;
     }
 }
@@ -49,20 +45,14 @@ control egress(inout Headers h, inout Me
 }
 control deparser(packet_out b, in Headers h) {
     apply {
-        {
-            b.emit<hdr>(h.h);
-        }
+        b.emit<hdr>(h.h);
     }
 }
 control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
     @name("c") compute() c_1;
     apply {
-        {
-            c_1.apply(h.h);
-        }
-        {
-            sm.egress_spec = 9w0;
-        }
+        c_1.apply(h.h);
+        sm.egress_spec = 9w0;
     }
 }
 V1Switch<Headers, Meta>(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
