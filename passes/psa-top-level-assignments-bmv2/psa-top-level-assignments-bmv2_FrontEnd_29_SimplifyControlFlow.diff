--- before_pass
+++ after_pass
@@ -15,20 +15,14 @@ struct headers_t {
 }
 parser ingressParserImpl(packet_in packet, out headers_t hdr, inout metadata_t meta, in psa_ingress_parser_input_metadata_t istd, in empty_metadata_t resubmit_meta, in empty_metadata_t recirculate_meta) {
     state start {
-        {
-            packet.extract<ethernet_t>(hdr.ethernet);
-        }
+        packet.extract<ethernet_t>(hdr.ethernet);
         transition accept;
     }
 }
 control ingressImpl(inout headers_t hdr, inout metadata_t meta, in psa_ingress_input_metadata_t istd, inout psa_ingress_output_metadata_t ostd) {
     apply {
-        {
-            ostd.drop = false;
-        }
-        {
-            ostd.egress_port = (PortId_t)32w3;
-        }
+        ostd.drop = false;
+        ostd.egress_port = (PortId_t)32w3;
     }
 }
 parser egressParserImpl(packet_in packet, out headers_t hdr, inout metadata_t meta, in psa_egress_parser_input_metadata_t istd, in empty_metadata_t normal_meta, in empty_metadata_t clone_i2e_meta, in empty_metadata_t clone_e2e_meta) {
@@ -42,25 +36,19 @@ control egressImpl(inout headers_t hdr,
 }
 control CommonDeparserImpl(packet_out packet, inout headers_t hdr) {
     apply {
-        {
-            packet.emit<ethernet_t>(hdr.ethernet);
-        }
+        packet.emit<ethernet_t>(hdr.ethernet);
     }
 }
 control ingressDeparserImpl(packet_out packet, out empty_metadata_t clone_i2e_meta, out empty_metadata_t resubmit_meta, out empty_metadata_t normal_meta, inout headers_t hdr, in metadata_t meta, in psa_ingress_output_metadata_t istd) {
     @name("cp") CommonDeparserImpl() cp_0;
     apply {
-        {
-            cp_0.apply(packet, hdr);
-        }
+        cp_0.apply(packet, hdr);
     }
 }
 control egressDeparserImpl(packet_out packet, out empty_metadata_t clone_e2e_meta, out empty_metadata_t recirculate_meta, inout headers_t hdr, in metadata_t meta, in psa_egress_output_metadata_t istd, in psa_egress_deparser_input_metadata_t edstd) {
     @name("cp") CommonDeparserImpl() cp_1;
     apply {
-        {
-            cp_1.apply(packet, hdr);
-        }
+        cp_1.apply(packet, hdr);
     }
 }
 IngressPipeline<headers_t, metadata_t, empty_metadata_t, empty_metadata_t, empty_metadata_t, empty_metadata_t>(ingressParserImpl(), ingressImpl(), ingressDeparserImpl()) ip;
