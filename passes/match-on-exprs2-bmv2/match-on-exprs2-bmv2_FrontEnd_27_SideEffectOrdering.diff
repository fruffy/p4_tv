--- before_pass
+++ after_pass
@@ -13,7 +13,9 @@ struct metadata_t {
 }
 parser parserImpl(packet_in packet, out headers_t hdr, inout metadata_t meta, inout standard_metadata_t stdmeta) {
     state start {
-        packet.extract<ethernet_t>(hdr.ethernet);
+        {
+            packet.extract<ethernet_t>(hdr.ethernet);
+        }
         transition accept;
     }
 }
@@ -23,11 +25,17 @@ control verifyChecksum(inout headers_t h
 }
 control ingressImpl(inout headers_t hdr, inout metadata_t meta, inout standard_metadata_t stdmeta) {
     @name("my_drop") action my_drop_0() {
-        mark_to_drop(stdmeta);
+        {
+            mark_to_drop(stdmeta);
+        }
     }
     @name("foo") action foo_0(bit<9> out_port) {
-        hdr.ethernet.dstAddr[22:18] = hdr.ethernet.srcAddr[5:1];
-        stdmeta.egress_spec = out_port;
+        {
+            hdr.ethernet.dstAddr[22:18] = hdr.ethernet.srcAddr[5:1];
+        }
+        {
+            stdmeta.egress_spec = out_port;
+        }
     }
     @name("t1") table t1_0 {
         key = {
@@ -43,7 +51,9 @@ control ingressImpl(inout headers_t hdr,
         const default_action = NoAction();
     }
     apply {
-        t1_0.apply();
+        {
+            t1_0.apply();
+        }
     }
 }
 control egressImpl(inout headers_t hdr, inout metadata_t meta, inout standard_metadata_t stdmeta) {
@@ -56,7 +66,9 @@ control updateChecksum(inout headers_t h
 }
 control deparserImpl(packet_out packet, in headers_t hdr) {
     apply {
-        packet.emit<ethernet_t>(hdr.ethernet);
+        {
+            packet.emit<ethernet_t>(hdr.ethernet);
+        }
     }
 }
 V1Switch<headers_t, metadata_t>(parserImpl(), verifyChecksum(), ingressImpl(), egressImpl(), updateChecksum(), deparserImpl()) main;
