--- before_pass
+++ after_pass
@@ -44,41 +44,41 @@ parser ParserImpl(packet_in packet, out
     }
 }
 control ingress(inout headers_t hdr, inout meta_t meta, inout standard_metadata_t standard_metadata) {
-    @name(".my_drop") action my_drop_1(inout standard_metadata_t smeta_0) {
+    @name(".my_drop") action my_drop(inout standard_metadata_t smeta_0) {
         mark_to_drop(smeta_0);
     }
-    @name(".my_drop") action my_drop_2(inout standard_metadata_t smeta_0) {
+    @name(".my_drop") action my_drop_0(inout standard_metadata_t smeta_0) {
         mark_to_drop(smeta_0);
     }
-    @name(".NoAction") action NoAction_1() {
+    @name(".NoAction") action NoAction_0() {
     }
-    @name("set_output") action set_output_0(bit<9> out_port) {
+    @name("set_output") action set_output(bit<9> out_port) {
         standard_metadata.egress_spec = out_port;
     }
-    @name("ipv4_da_lpm") table ipv4_da_lpm {
+    @name("ipv4_da_lpm") table ipv4_da_lpm_0 {
         key = {
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
         actions = {
-            set_output_0();
-            my_drop_1(standard_metadata);
+            set_output();
+            my_drop(standard_metadata);
         }
-        default_action = my_drop_1(standard_metadata);
+        default_action = my_drop(standard_metadata);
     }
-    @name("ipv4_sa_filter") table ipv4_sa_filter {
+    @name("ipv4_sa_filter") table ipv4_sa_filter_0 {
         key = {
             hdr.ipv4.srcAddr: ternary @name("hdr.ipv4.srcAddr") ;
         }
         actions = {
-            my_drop_2(standard_metadata);
-            NoAction_1();
+            my_drop_0(standard_metadata);
+            NoAction_0();
         }
-        const default_action = NoAction_1();
+        const default_action = NoAction_0();
     }
     apply {
         if (hdr.ipv4.isValid()) {
-            ipv4_sa_filter.apply();
-            ipv4_da_lpm.apply();
+            ipv4_sa_filter_0.apply();
+            ipv4_da_lpm_0.apply();
         }
     }
 }
