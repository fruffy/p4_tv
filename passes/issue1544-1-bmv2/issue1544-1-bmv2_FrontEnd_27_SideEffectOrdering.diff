--- before_pass
+++ after_pass
@@ -20,17 +20,23 @@ struct headers {
     ethernet_t ethernet;
 }
 action my_drop(inout standard_metadata_t smeta) {
-    mark_to_drop(smeta);
+    {
+        mark_to_drop(smeta);
+    }
 }
 parser ParserImpl(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     state start {
-        packet.extract<ethernet_t>(hdr.ethernet);
+        {
+            packet.extract<ethernet_t>(hdr.ethernet);
+        }
         transition accept;
     }
 }
 control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
     @name("set_port") action set_port_0(bit<9> output_port) {
-        standard_metadata.egress_spec = output_port;
+        {
+            standard_metadata.egress_spec = output_port;
+        }
     }
     @name("mac_da") table mac_da_0 {
         key = {
@@ -42,9 +48,15 @@ control ingress(inout headers hdr, inout
         }
         default_action = my_drop(standard_metadata);
     }
+    bit<16> tmp;
     apply {
-        mac_da_0.apply();
-        hdr.ethernet.srcAddr[15:0] = sometimes_dec(hdr.ethernet.srcAddr[15:0]);
+        {
+            mac_da_0.apply();
+        }
+        {
+            tmp = sometimes_dec(hdr.ethernet.srcAddr[15:0]);
+            hdr.ethernet.srcAddr[15:0] = tmp;
+        }
     }
 }
 control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
@@ -53,7 +65,9 @@ control egress(inout headers hdr, inout
 }
 control DeparserImpl(packet_out packet, in headers hdr) {
     apply {
-        packet.emit<ethernet_t>(hdr.ethernet);
+        {
+            packet.emit<ethernet_t>(hdr.ethernet);
+        }
     }
 }
 control verifyChecksum(inout headers hdr, inout metadata meta) {
