--- before_pass
+++ after_pass
@@ -1,20 +1,5 @@
 #include <core.p4>
 #include <v1model.p4>
-bit<16> sometimes_dec(in bit<16> x) {
-    bool hasReturned = false;
-    bit<16> retval;
-    bit<16> tmp_0;
-    if (x > 16w5) {
-        tmp_0 = x + 16w65535;
-    } else {
-        tmp_0 = x;
-    }
-    {
-        hasReturned = true;
-        retval = tmp_0;
-    }
-    return retval;
-}
 struct metadata {
 }
 header ethernet_t {
@@ -51,7 +36,22 @@ control ingress(inout headers hdr, inout
     }
     apply {
         mac_da_0.apply();
-        tmp = sometimes_dec(hdr.ethernet.srcAddr[15:0]);
+        {
+            bit<16> x_0 = hdr.ethernet.srcAddr[15:0];
+            bool hasReturned = false;
+            bit<16> retval;
+            bit<16> tmp_0;
+            if (x_0 > 16w5) {
+                tmp_0 = x_0 + 16w65535;
+            } else {
+                tmp_0 = x_0;
+            }
+            {
+                hasReturned = true;
+                retval = tmp_0;
+            }
+            tmp = retval;
+        }
         hdr.ethernet.srcAddr[15:0] = tmp;
     }
 }
