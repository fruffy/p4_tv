--- before_pass
+++ after_pass
@@ -26,19 +26,27 @@ struct Parsed_rep {
 }
 parser LJparse(packet_in b, out Parsed_rep p) {
     state start {
-        b.extract<ARPA_hdr>(p.arpa_pak);
+        {
+            b.extract<ARPA_hdr>(p.arpa_pak);
+        }
         transition accept;
     }
 }
 control LjPipe(inout Parsed_rep p, in error parseError, in InControl inCtrl, out OutControl outCtrl) {
     @name("Drop_action") action Drop_action_0(out PortId port) {
-        port = 4w0xf;
+        {
+            port = 4w0xf;
+        }
     }
     @name("Drop_1") action Drop() {
-        outCtrl.outputPort = 4w0xf;
+        {
+            outCtrl.outputPort = 4w0xf;
+        }
     }
     @name("Forward") action Forward_0(PortId outPort) {
-        outCtrl.outputPort = outPort;
+        {
+            outCtrl.outputPort = outPort;
+        }
     }
     @name("Enet_lkup") table Enet_lkup_0 {
         key = {
@@ -52,7 +60,9 @@ control LjPipe(inout Parsed_rep p, in er
         default_action = Drop();
     }
     apply {
-        outCtrl.outputPort = 4w0xf;
+        {
+            outCtrl.outputPort = 4w0xf;
+        }
         if (p.arpa_pak.isValid()) {
             Enet_lkup_0.apply();
         }
@@ -60,7 +70,9 @@ control LjPipe(inout Parsed_rep p, in er
 }
 control LJdeparse(inout Parsed_rep p, packet_out b) {
     apply {
-        b.emit<ARPA_hdr>(p.arpa_pak);
+        {
+            b.emit<ARPA_hdr>(p.arpa_pak);
+        }
     }
 }
 VSS<Parsed_rep>(LJparse(), LjPipe(), LJdeparse()) main;
