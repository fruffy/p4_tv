--- before_pass
+++ after_pass
@@ -78,7 +78,7 @@ parser EgressParserImpl(packet_in buffer
 control ingress(inout headers hdr, inout metadata user_meta, in psa_ingress_input_metadata_t istd, inout psa_ingress_output_metadata_t ostd) {
     @name("port_bytes_in") Counter<ByteCounter_t, PortId_t>(32w512, PSA_CounterType_t.BYTES) port_bytes_in;
     @name("per_prefix_pkt_byte_count") DirectCounter<PacketByteCounter_t>(PSA_CounterType_t.PACKETS_AND_BYTES) per_prefix_pkt_byte_count;
-    @name("next_hop") action next_hop(PortId_t oport) {
+    @name("next_hop") action next_hop_0(PortId_t oport) {
         per_prefix_pkt_byte_count.count();
         {
             psa_ingress_output_metadata_t meta_0 = ostd;
@@ -89,7 +89,7 @@ control ingress(inout headers hdr, inout
             ostd = meta_0;
         }
     }
-    @name("default_route_drop") action default_route_drop() {
+    @name("default_route_drop") action default_route_drop_0() {
         per_prefix_pkt_byte_count.count();
         {
             psa_ingress_output_metadata_t meta_1 = ostd;
@@ -102,10 +102,10 @@ control ingress(inout headers hdr, inout
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
         actions = {
-            next_hop();
-            default_route_drop();
+            next_hop_0();
+            default_route_drop_0();
         }
-        default_action = default_route_drop();
+        default_action = default_route_drop_0();
         psa_direct_counter = per_prefix_pkt_byte_count;
     }
     apply {
