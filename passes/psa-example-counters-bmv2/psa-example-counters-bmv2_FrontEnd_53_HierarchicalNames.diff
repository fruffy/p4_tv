--- before_pass
+++ after_pass
@@ -76,9 +76,9 @@ parser EgressParserImpl(packet_in buffer
     }
 }
 control ingress(inout headers hdr, inout metadata user_meta, in psa_ingress_input_metadata_t istd, inout psa_ingress_output_metadata_t ostd) {
-    @name("port_bytes_in") Counter<ByteCounter_t, PortId_t>(32w512, PSA_CounterType_t.BYTES) port_bytes_in_0;
-    @name("per_prefix_pkt_byte_count") DirectCounter<PacketByteCounter_t>(PSA_CounterType_t.PACKETS_AND_BYTES) per_prefix_pkt_byte_count_0;
-    @name("next_hop") action next_hop(PortId_t oport) {
+    @name("ingress.port_bytes_in") Counter<ByteCounter_t, PortId_t>(32w512, PSA_CounterType_t.BYTES) port_bytes_in_0;
+    @name("ingress.per_prefix_pkt_byte_count") DirectCounter<PacketByteCounter_t>(PSA_CounterType_t.PACKETS_AND_BYTES) per_prefix_pkt_byte_count_0;
+    @name("ingress.next_hop") action next_hop(PortId_t oport) {
         per_prefix_pkt_byte_count_0.count();
         {
             psa_ingress_output_metadata_t meta_2 = ostd;
@@ -89,7 +89,7 @@ control ingress(inout headers hdr, inout
             ostd = meta_2;
         }
     }
-    @name("default_route_drop") action default_route_drop() {
+    @name("ingress.default_route_drop") action default_route_drop() {
         per_prefix_pkt_byte_count_0.count();
         {
             psa_ingress_output_metadata_t meta_3 = ostd;
@@ -97,7 +97,7 @@ control ingress(inout headers hdr, inout
             ostd = meta_3;
         }
     }
-    @name("ipv4_da_lpm") table ipv4_da_lpm_0 {
+    @name("ingress.ipv4_da_lpm") table ipv4_da_lpm_0 {
         key = {
             hdr.ipv4.dstAddr: lpm @name("hdr.ipv4.dstAddr") ;
         }
@@ -116,7 +116,7 @@ control ingress(inout headers hdr, inout
     }
 }
 control egress(inout headers hdr, inout metadata user_meta, in psa_egress_input_metadata_t istd, inout psa_egress_output_metadata_t ostd) {
-    @name("port_bytes_out") Counter<ByteCounter_t, PortId_t>(32w512, PSA_CounterType_t.BYTES) port_bytes_out_0;
+    @name("egress.port_bytes_out") Counter<ByteCounter_t, PortId_t>(32w512, PSA_CounterType_t.BYTES) port_bytes_out_0;
     apply {
         port_bytes_out_0.count(istd.egress_port);
     }
