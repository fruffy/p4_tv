--- before_pass
+++ after_pass
@@ -28,17 +28,8 @@ struct headers {
 }
 struct metadata {
 }
-parser subParserImpl(packet_in pkt, inout headers hdr, out bit<8> ret_next_hdr_type) {
-    state start {
-        pkt.extract<h2_t>(hdr.h2.next);
-        verify(hdr.h2.last.hdr_type == 8w2, error.BadHeaderType);
-        ret_next_hdr_type = hdr.h2.last.next_hdr_type;
-        transition accept;
-    }
-}
 parser parserI(packet_in pkt, out headers hdr, inout metadata meta, inout standard_metadata_t stdmeta) {
     bit<8> my_next_hdr_type_0;
-    @name("subp") subParserImpl() subp_0;
     state start {
         pkt.extract<h1_t>(hdr.h1);
         verify(hdr.h1.hdr_type == 8w1, error.BadHeaderType);
@@ -49,7 +40,15 @@ parser parserI(packet_in pkt, out header
         }
     }
     state parse_first_h2 {
-        subp_0.apply(pkt, hdr, my_next_hdr_type_0);
+        transition subParserImpl_start;
+    }
+    state subParserImpl_start {
+        pkt.extract<h2_t>(hdr.h2.next);
+        verify(hdr.h2.last.hdr_type == 8w2, error.BadHeaderType);
+        my_next_hdr_type_0 = hdr.h2.last.next_hdr_type;
+        transition parse_first_h2_0;
+    }
+    state parse_first_h2_0 {
         transition select(my_next_hdr_type_0) {
             8w2: parse_other_h2;
             8w3: parse_h3;
