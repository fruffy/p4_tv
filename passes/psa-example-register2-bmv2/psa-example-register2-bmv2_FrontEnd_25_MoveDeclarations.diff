--- before_pass
+++ after_pass
@@ -50,11 +50,11 @@ parser IngressParserImpl(packet_in buffe
     }
 }
 control ingress(inout headers hdr, inout metadata user_meta, in psa_ingress_input_metadata_t istd, inout psa_ingress_output_metadata_t ostd) {
+    PacketByteCountState_t tmp_0;
     @name("port_pkt_ip_bytes_in") Register<PacketByteCountState_t, PortId_t>(32w512) port_pkt_ip_bytes_in_0;
     apply {
         ostd.egress_port = (PortId_t)32w0;
         if (hdr.ipv4.isValid()) @atomic {
-            PacketByteCountState_t tmp_0;
             tmp_0 = port_pkt_ip_bytes_in_0.read(istd.ingress_port);
             update_pkt_ip_byte_count(tmp_0, hdr.ipv4.totalLen);
             port_pkt_ip_bytes_in_0.write(istd.ingress_port, tmp_0);
